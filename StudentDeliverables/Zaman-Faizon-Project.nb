(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    132549,       2437]
NotebookOptionsPosition[    122244,       2234]
NotebookOutlinePosition[    127358,       2353]
CellTagsIndexPosition[    127143,       2344]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["Last modified on: Monday, July 9, 2018 at 16:40", "TemplateInstructions",
 Deployed->True,
 Background->RGBColor[0.75, 0.75, 0.75],
 CellTags->
  "LastModified",ExpressionUUID->"a049fff8-db5b-44dd-b6af-a2f809537870"],

Cell[CellGroupData[{

Cell["Author Info", "TemplateSectionHeaders",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellTags->
  "AuthorInfo",ExpressionUUID->"47541fce-e5a1-4793-b8e1-e1340b437ca6"],

Cell["Faizon", "TemplateAuthorInfo",
 ShowCellBracket->False,
 CellFrameLabels->{{
    Cell["Name:", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{35, 0}, {0, 
  0}},ExpressionUUID->"2214bf82-cb91-41b2-a79f-ecd872282532"],

Cell["Zaman", "TemplateAuthorInfo",
 ShowCellBracket->False,
 CellFrameLabels->{{
    Cell["Mentor: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{25, 0}, {0, 
  0}},ExpressionUUID->"1d803eb4-64f6-4601-a1a0-49b5afc9692c"],

Cell["SUNY Oswego", "TemplateAuthorInfo",
 ShowCellBracket->False,
 CellFrameLabels->{{
    Cell["Affiliation: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{8, 0}, {0, 
  0}},ExpressionUUID->"f3f2c56d-6554-49c0-a8f0-7c8d2bae5215"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Poster Session Content", "TemplateSectionHeaders",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellTags->
  "PosterContent",ExpressionUUID->"e3c11918-b62c-4e4f-bc19-a4aa32cba637"],

Cell["Wolfram-Twine Bridge", "TemplateEditableContent",
 CellFrameLabels->{{
    Cell["Title of \nproject: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{17, 0}, {0, 0}},
 CellChangeTimes->{{3.740066562146594*^9, 
  3.740066563244405*^9}},ExpressionUUID->"16215b85-c481-4f11-8175-\
b0652d7bbfad"],

Cell["\<\
The goal is to build an Import/Export system between Twine and the Wolfram \
Language. Twine is browser-based software used to make interactive stories \
and text-based games. A Twine story or game consists of a network of passages \
and macros that can change the state of variables or other story elements. \
Graphs and Associations will be used to represent Twine Stories in the \
Wolfram Language. The primary goal is importing the Twine Story HTML file \
into the form of a Wolfram Language Graph and Association, and exporting an \
Association form to the Twine HTML format.\
\>", "TemplateEditableContent",
 CellFrameLabels->{{
    Cell["Goal of \nthe \nproject: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{18, 0}, {0, 0}},
 CellChangeTimes->{{3.7391955999339046`*^9, 3.739195640601819*^9}, {
  3.739276212941334*^9, 3.739276542706703*^9}, {3.73930926414095*^9, 
  3.739309270230917*^9}, {3.739309305495183*^9, 3.739309327545227*^9}, {
  3.740064276383819*^9, 3.740064401532343*^9}, {3.740064694861266*^9, 
  3.740064847059561*^9}, {3.740065998616817*^9, 3.740066014120241*^9}, {
  3.740076979664734*^9, 
  3.740077021495429*^9}},ExpressionUUID->"c662dd0a-9849-40e8-bc89-\
a9f688107475"],

Cell["\<\
Add the most representative image of your project here. (We recommend just 1 \
image, if you add more, we will make a collage of the images.)\
\>", "TemplateInstructions",
 GeneratedCell->True,
 CellAutoOverwrite->
  True,ExpressionUUID->"ec924e65-f9fc-4678-8fe3-95cd292f053c"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3eufVPWdL/p+nXMenIfnX9j7zEwmXuDZeU2c0QgP9k5iDLz2mT0ZFT3j
joKzJyo6mSiai6JuAZOtYEYuKmAETEAjoKJGwQBGQC4KKI3SSKM0CY020uiu
Nt3me6r6UrVW1aruaqCrL7zf8/oFqVqX3/qttZgHv099f//hv938X6b+bw0N
Df/6f+b/579ce9uEW2+9dsb/+3/l//Jfb/rXf5520/XXffOmH1w/7fpb/+a/
/e/5D6f8Hw0N389vmv+j4Z133on169cHAAAAAAAAAAD1Ia8BAAAAAAAAAFBf
8hoAAAAAAAAAAPUlrwEAAAAAAAAAUF/yGgAAAAAAAAAA9SWvAQAAAAAAAABQ
X/IaAAAAAAAAAAD1Ja8BAAAAAAAAAFBf8hoAAAAAAAAAAPUlrwEAAAAAAAAA
UF/yGowmp5q2xJIFc2PugiWxsenEcHcHRjTvCwAAAAAAAIxc8hqMGsefj/EN
DdGQaC+0dA13r2Bk8r4AAAAAAADAiCavwWhxatfPU3PPhfbglk+Hu1v9yx2J
9avmx/SpV8WECRO626RJ0+LuuStiS9Px4e4dY9iofF/yulreiAVzF8SSJUti
yYIFsWDZ5mgf7k4BAAAAAADAEJDXoDa5eHrGFTFp0qS49Dt3xL5c/XvQsfcX
FfPPj+z5rP4dqdHxbY9V1Dcob+df/3AcMBk9QnXG5gW3xZSpU2P69OnFNvWq
W2J1U8cA+3pfTtfehd+o6Le6INXkYsPcmzKf0XXNAz2jAAAAAAAADDd5DWpz
JO4Z1zd/Ojm2DEvG4JN4afb3Yty4iTFx3Li4ctZzI/Z39x0Hf9VvTiPVznt4
xF7Hue1kLJqQfc8e3DlQnQrvy+k5FnPGVY7395a9N9wdG6HO5BkFAAAAAABg
uMlrUJOO7TG5oTT/vGMY6gWMHrl4alJ67vTS6+fE+p17oqlxT/f6KFcn5qQf
3PLxcHeYTCdj6aTsufAB61R4X05L1+HfZGeaLl80CrImw+FkrJgirwEAAAAA
ADBajfW8RmfHF5Hra6OhpH5Xor8dw9vh9taWaG5ujqampmjc+uuYWJwLnBjL
tu6Nxj17Yk+yNTZHYVq6s/1I4rOj0TngmU5GU/E4TdEztZ2L5say41ecr/qx
c62Hitu19E70drYdivWrFsfs2bNj9syZMXvB07GvbeAxbm/Zl99vWcwt7Jdv
cxesiFd3HozqU/CHErUVGuK8m5/L6Gcuti25K+5e9k7FN61Nu4t9b27LOEvu
WGLsmxL96CyNWdPx/F+PxYbl82Nm77X2rLvSGfvXP9l9HTNnz42NTadKe7eV
xqw1f9ATja90X/PMfFu59XDPNq37YvncWd3HfGjZ5upz6J3t+Xu6MVblz98z
bjPzx1kYqzft72fc+q6/sXht7cWBy0XTzldjyYK5Pfdv7oJYuX5XtPV+n2s9
kHouqks+a43F/attW8prTI6NbX2jnM370jsOg35fSvYv/Yfie3PhhMmJ9YQm
xiutA+/f1rw71uSfudkzZ/c+J3Nj+ZoN0dhyYuCdc22xZ9PqWDC355nv7vuS
5fm+7x/gOelRGK9NL66MuXPT1117ziR/D/dsyfd/SdnY7R/wGJ2dPR08sevn
8hoAAAAAAACjyGjIa3x2YH387Y3z4m8e3FbTnF9Rx8G4Nr/f3/a2/7T8YPGr
3NGDsXTpmrh36QvxwNKXY/mmpjjekXGMk3+IF59/Nb9NfrtHX4glL78bR7O2
K56zNZ5e8XKsbsyeH+w8eSTWrHqp+3jzVqyP1ds/jNKMeS6e+NHcYn8vunF5
vNPfuYbUyXg4Y12C/tvE7nUf9s77m8Rn6doCufb2aM8VWmkCtOtwcu2Q8fG7
wuTkqTcS8939ny/LrkQfblr5Tuxd+9Oqx3mkWn2LziOxdPrF/Zz/mliXyDsU
dWyPqxPbnXfzM4OYs02P+1dmvVmxxanEnGxhvIpjcGp7YszGx9UTy/p76Z2x
8J7LKq7jycZTFWN2wZQpFdvdvmBB6rq623XPpN7JzvZDsXbBbYl59qx2Q/a4
VVx/z7PQcfCFyvP2tvu39MxJp5+58VXn9jv2/iJ97U39vWDpvMaOfm+i9+W0
35eiT2JeYm2PBzftTdU3uWnlB1X37GzdHvdMOq/f67/gO3fEuj1ZWZ7O2LX8
rgHGbnzcPv+lOJL5/4BOxoa53+tn38mxbOfxfq474vCmxxP1WLKPsbg3M9Wf
U4nnW14DAAAAAABg5BtNeY2v/Whj1PAr6ZKOg/H97uzDgvjBvz8Tczf2TOL+
8a1XipmIdHssXjn6p+LuH+/dUGW7J1LbJX20aVX3Nn+fyIaUjrcp83gX/WBd
HOz+2foXsWX16vjRv/86vtt7njc/H8wFn00nU3Ong5l/Ls8TPNvc+5v8E4k5
5fMeiGO9ZzqxLbn9nXGgMDVd0/xz9Tn0vQu/O4h+XxO7y+dhuw7EHTXNvyeu
LzF2i8rH7qoHYktT/3O2ffsm56i//dBbFVucSmUOEmNQlhOpuV33fHfdhcGN
Wan9urmj2PfaMwvV7l36+m+ePbuf52ByKX9w4nep7S6bX1m3pGDDjP+7tP8l
i6Kt5nsxcF7D+3K670uvo8+n6mm8kStkWb5R2vfyJ6rkno7FnJqfu4kVa9Oc
2Hxfzdf+dw+VP1cnY8W02va9/9U/ZPZ+W81jP75q3qaPvAYAAAAAAMDoMtry
Gv39OrtCb17jazN/X6oBcLKxNwsxL/555d748ORn8YdD++O+H/d89rU7f997
jk/iZz/o+ey/L98RH7R9Fsc/OhAPz3mkZ7uZvy/2pfPz1ti+fVcsXfqrYgbj
/1vZnO7L56VaHz3HOxkfHtpbPO9/WrIvsXFXPHXP3O68xlvDlteI7nUzFixY
EEuWLIk5t6R/N3/z3KXdn5fagliw5KWeOeWyufO+GgjpeenJsaV3sjw1V1yc
kz0WLy2Znz9/4hzLl8QtqXnZwc4/T46Hlq+NNUvuqqj/8NON6ZoBqXn9QvvO
nbFu58FoaWmODeW/xb/yqYq6Lwef/qfsOddLp8Wy9XsT63yUO7t5jULeYVrZ
XPb1M+ekP+vNLVSM2aW3xtyZV6Y/u+CGmD3zutRnyXnhw2v/JTFmt8TiNRti
Z2NjbF2/LK4u68dl8yuvrfz6y+fab549r/tZu2fq5flnJZ23SN+zW3tyDEkd
b6fG54frsufPs/syUF7D+3Im70vBwRXXJp7Jh7vv7aldyWd9YnFNmqSOvY+l
jv/1mxfF1sbmaGtrjeamHbF2Qan/P1z3YT/3uOcc81/cFs2tbdFWWCNm0+q4
Z0pv3Y7z741DZc9U6nnvzVTMWrU59uzZGktnfLtiPMvzFunsTWnsVq7fFjt3
bowVc28v9v2KxdkZpCR5DQAAAAAAgNFlVOY1uj6JFY/+Ku55dl935uFnDy2N
7/740fjmD+bHnc++X5oLLOY1SnU5Pmv8bfex/vOivemTfP5+d56iWMOjN19x
0ffXRqqC/uc9eY+LblxZXKvks71rK2pmlOc1/rjlN71ruuyI1JTfyb7jJdc+
ycUT5XmNrtZYs/rVWPLcnmit8vP0odS1/9HEnOI1sbtq3iB6fmufMS9fPif8
4I7PonCtTyd+n56VT0jav/QfTmv++es3P5Oa2z9VNsd7ceK8XQd/lfrukttf
jvLLPZ76Tf7kjHnkk/HSzG9VyR30zAvPWrY52irG8ezlNS6e9XrFmH01fy0F
R5PzzJcs6p7zT4/Z5N41RZIZh4nxbEvhs0NxS5W8RsSRWDFzdpV1Jw6lnou+
Ofn+rr+vXTf/tQHXlEmvE9IQd72azhQc3/CT9DM84OJKg8trpPrifUkZ+H35
JBZOqhyD8mf6xtXleYvyTEeVHE7uSGzatDcjJ3Iydd6GhnvzT3Cllj0bY3dL
2do5Xe/GtLJ3el1Z7ZBdS69N9e3bDyXXNyp7H/LtpmUZmYy2fbF8yUs1rakk
rwEAAAAAADC6jMq8RqJWRVYrZDG65wsTeY2+WhgdH70dP56zrLg2Sukcm9Jr
rhTPkV4j5Y/bX+zdbkNpbZaOk/HBoT/Gh61/jLX//khmXmP3qsXdn1/z7Edl
V5frraUxLxYf+KLss0Re4/P3e+uCLIjXh6HmRtWMQKZcrJiSmIe87pn8Z53p
zxr61qw4FnMS60iU/26/XHmmoKb5568/UJkL6Ngek1PzqKX554NPp38z/8jO
jyPX3hZtbX2tPdqPvpKqOVBtbvTgpscr6kqk2w2xJRXAOXt5jUf2fFYxFn2f
pWoSZOU1+uo2nEoc8/JFvXPG6T5WnRfuzEVrc1Ps3LQuli9ZEHNn355es6N4
vKTKvEZ6jrs/Zc9d6vjp7y6++/Uajnf6eQ3vyyDfl+O/TXw/Pn6dyD2snf6X
peNn1OYoz4sU2qXX3xOrN+2N1vaBQjnp/Etf7uLuBWtjT/PxzDogxfMe/k3q
mrKzM++nsk2pNXjy15x8H867+bmKnMtgyWsAAAAAAACMLqMyr9Gbw+hZl+S3
8U5bT57i/Q3PprMUGXmNpM6TR+LFl7fGihVPx7d6j3fH+r7fZnfFjlW/LGZA
/vu/PxM/emhp8e/3bMxeS+H953+Zmdd4/+Wnuj//++UH0zt0lLIn8xv/V++H
GXmNjiPxszlL458e3BAHu/J9bzsYK1a/Hiuer96WPP9WHD1LtTgGN/9cmP/9
RmKO8uFo6zqQnrfsnnv9TeS63k7MA4+PXzd1DHDc05h/zswFfBLzJmTPte5K
9r3G1v/caGc073w27uhbV6G8nfdAz7oY3c5eXqOvT8mx6PssdYysvEbvZ6lj
XlJbXiPXsjuWzryuYg2NinZJDXmN/Nhk1TuoJj02DaXnqWxufKDnrLIvQ5nX
8L6UZz6uW/B0rFq1PFatWVU2DpVrinT3oayORbJdeOm0eGj5hmipdg9ObC+r
k5Fs4+OqGfPi1Yx6MeV1PXrqn5TrjJfu+IvUvT1W3P/nNew/OPIaAAAAAAAA
o8vozmssiN8mfwje1dybfejNOQyQ1/iscV1FbY75e4tVM+KP239TtYbHsgPZ
RS72rc7Oa3Qd3dq772Ox+K1jkYuuyJ08EksfWlQ6d395jRr6ntXOVi2Owc4/
n9iWnIu8ITbtWtk7X35NzJ13Xe/nd8bWXU8mtrsmdgzwc/jTmn+uIReQqhew
ovrcb7V2/5ba5kbbC1mGGd+u2P+R4lzt6M5rHN1wX5UxGh+TpkwZdF6jp6bE
YKRzBX11NFL3NFnjoF/1y2uc2+9L9ho41Vrmeid5x/e8EHdM+Xr/5133QfYA
dB6Llxbclq7/Ut6+80DsSwxMR1ldj39cnd2v9Jo01xTvQXldkEfkNQAAAAAA
AM45ozmvcdG//jbSq5qciieSOYcB8hrRlYsPP/pjvLt3d/xsziO9GYcF8Vrb
l9Hx0e9LtTWWvx0ftH0Wx48ejqX/vqiYu/j9ycpDVstrFOp1bFqxuN9sxfy9
tec14vO2eHvvB/F2Y/W2vfFonBiS+hoT44WWAQ589PlEfYWJMWPm9T3/ff69
sXPX48X54wUrZiXmiR8ecB69HvPPu+Z9MzWPetuqzbF106bYVKUV3p99bYMb
6P0rvp86R2lutTyvUJnX6Nj/6MjMa5z4Xdl898SYlR+75rb24joPqbnrQd6X
Wh3f8JNU9uFAZ1ssSmQ4qs33VzpbeQ3vS7/vS8VzM0C77pl+1ynJtR2JnetX
xpzpV2Xu/0i/OYZctDTtiFULZmWvY3T5E8Uxr6iPkZnZysXSKmv0lO9/16v9
r21TC3kNAAAAAACA0WU05zUqcxhlOYeM7U61HY/3DrTE8c/L508/jUU/mlvM
TezrXdfkP//i7bLtTqW2K1c9r9Hjw73b4sdzlsa19yyNf5m9NlZteSvu+3Fv
rZDWL7OvYwQYdO3+rnez1xgorOnQsT2xpkOpXXL3awP2ox7zz+n5/oa4/zTm
UTv2/yqmXDUn9Xv81Pfl41klr/HV21+u2De99sPIyWuUrw/xZNOXUW7vvG+c
9n2p3aG4I9GP2+fOTuQBrondA9SkyO7LIPMa3peaHV77b6lsy+L1u2Lnzp2x
dWuhbY2de3bG0ukXJ7a5puI6Otur3NTcsdi84oep/l380JvlG0WuM3PvaG3a
GHdMaEiNYXE9lvKcyXXPRMVhyrdJrjVz6o2ynMqd+Se3is5c5bEzyGsAAAAA
AACMLudaXmPtQz1Zi9kZWYtNSxcW1yXZt7qnFsY1z35Usd3uVYvL1i8pqZbX
6Dx5JF7csD1+/1FHeoeO9+O7hVoh318bh6tdR4aOQ2/Et25cEN/98aNV20U/
WBnvnK28x/HfpucWr3wijqWvMNoTdRSS87vjE/v1rG9xLOYkf7s+vufP762s
slZBQj3mnwtzrOn58fHxyKbDFUdob94RS+avLRuHwlgl9x8fdy/fEC1tpfnk
9pY3yuaAG+Lxxi96v/0kVQuiMH+9srFvjZ6TsXnhfyubtx85eY2O/b/sJ69x
MraVzZsPXV4j4uDT/1SZfWgorY9Sm9PPa3hfan1fcrEiWX+iSs2Q8vzLTzeW
MiFdh3/T/dnltz8R+1o7MnZ+LTWmF6eeqc54afpfdI/N4vX7M+t2vHnPf8jO
a+SvZF7Ze3zTssSxcwdiXtk6Lz9c92HiyMdiYfk6MFc9XFarpzMObnqy+1m6
YvF7Gb0ru1R5DQAAAAAAgFHlXMtrvN9bN+Nrszem1lLp+Ghnd26i8N2yAx3x
/stPdf/3RT9YGweTU4An3+8+ZuG7xQe+iHLV8hqf7V3Xew0b4kTx09IaKX+/
8mD16+je9LN4+6398cbeo91zin1j0n97It48a/U5yuaMe7MEt8+eG7Nn3ByT
x/XM025MTLaWr5PQPYfYvWZAZ7x0x19UfPfIngFqEESd5p+jMN//L5Xz/ZdO
i9kLlsSCubNj2qQLqszB5u9d+RxsXxs3MSZWWWMh2b/NMy+q2GbCpEmpOeeR
mNdIrwHS8zxcP3NOzJ19e/Z6F0OY14iOt1Nj0dd+3ZQxn1/VGeQ1vC+1vS+n
3khlPbLW/+nZLv1sN9z8XG/WJV1LpdAunXJL93lXrVoVCzKeveR6OOnaHj33
6PoZc2LJ8lWxavn8uGPK18u+vzeOJLpVnlHqu+6ZM6ZXvq/nPVCR7eo6+KvM
fysK1zBj+vVl/16Mj2eb+19XR14DAAAAAABgdBlteY3urMPnB+PaAfIab1bJ
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
n10/e2HckVhP5XvLdsWKqV/pXifkycZTpYO0vR3zpl6S6stV02fE5Kzxy9j2
/OsfiIUzr+z+75uWvXca13kG+rvPp9GPztbtMafs+rrHclbfPTzZO4bpdVce
3/PZ2bkegDFIXgMAAAAAAOAc0u88/rGYN6Hnu5tWflDa5eAvS3PwNz9Xqr/Q
Uarh8Ovmjji19xc921yyqDiHv3BSWRZg3LjU3y+bX8pbnNj1WOq7CZMmxfjE
3+9/9Q+9W/af12hvfiWmjausv1HsX1m7cXVjsZ+lMTkUdyS2uXDC5FRfBrtt
sp+1X+cZqCGvUXs/jsS9qe2ujsnjSn//67tfi+57MqVybB+R1wCoSl4DAAAA
AADgHDLAPP7evroU1z1TXEdk/4prE3Pwt8aB3sDGqV0/7/nsvAfiSEQqr9FX
X2NpMa8xMRZvPdyzY+eRWDjlq73bPtyb7TgS9/RlAL7zQOxu6ypuu7RYt+HW
2JcrP25DTJgwodjGJXIEff3qk8xrnHfzE9HY0hzrV62JA7n24vH6xqQ4Dg3j
45GtRzP6Utp218LvFrdd3LdtHIunZ/xdRl5jMNd5BgbMa9Tej766KQ0NN8SO
YkGUzthVHKPJsbu3v7vmfbP7s4sfevMMLwBg7JPXAAAAAAAAOIcMMI/fdfBX
xbn53X3ZiFTdhPHx6+aeuf3Nc76WyiL0l9f4Xtl6IB19217es20pSzExftce
Zd4vrqXS0+d0XqN6uyE2tnQUj1I6xw3FfEGU9bPv+IsmVNb/6On422XjV9r2
isXvpLdN1N2oGKOarvMMDHCfB9OP5Lbz1++PtlxfhZVj3XmXTVv3F9ec2dub
Xam2Tg0AJfIaAAAAAAAA55AB6y6UMgaP7P4ioqt3+0unxcxbLunJXqz8MJL1
GR5v/KJ7z/7yGuXrYpRv25GofXHBlFti+vTpiXZ58bufbvw4ddyGqxbFzj07
Y+vWnbFzZ/7PTetjxdzbE+t6TI4t7WXnvPyJSEcUyvMaR2LOuGrreeTi6al/
Vdq2491itqFvHJL2LvxGKr8wuOs8AwPc50H1o+vd4rH62qX5feav2hwt7Z2p
48prANROXgMAAAAAAOAcMmBeo1Q347LF78Wp/T3z+l+97bU4vPm+nvn6m34b
7cef7527vzMO9e7XX16j/Fzl2+5fem0qD1Ct/fVd21PHvWx+eU2L3svc/8ti
ZuPBHZ9V6V+fsn6eeiMml+2btL93HZCebbf3bjsxNrZVbFqRXxjcdZ6BAe7z
YPtx6uALMW1i9jbfnvVace0ceQ2A2slrAAAAAAAAnENqyGuc2tWba7jq4Vi7
8B+7//vGdR/nv/htTwbi/Dtj+cKbuj+/+O7XS/udQV6jeM6GW2NHS0s0Nzcn
Wku0tOZb/vPWtlzquNVzAaX6H33rlNSc10jsW1lfI2LDzIsS9TVK66Nkbbtt
3jfT66EM6jrPwEDroZxmP9pbDsT6NYtjZqIGRzLXIq8BUDt5DQAAAAAAgHNI
DXmNQgZhWkOyhsL4eKGl8MWx4johDRnHOLO8xs97jzkxXmkt79CRWDj18pg0
aVqsbjoVtdTXiKO/KdXX2PJplf71Ke/nyVhYNQ/yftzSkN62b9+LZ72e3rSr
tFZKKa8xmOs8AwPmNWrvx9HN/x6T8/f9krtfKzvHu3HHuPQ5+vIaVe8LAEXy
GgAAAAAAAOeQWvIa0Rlrp/9lKZdx/r1xpPebvrVSetoNsTtRfuFM8hqFbENf
DqLh6/fG7rau3i1PxoY53yqe89nmrtRxz7v5mWhuaY6mpqae2hD5P7e+uLi4
nkkha9Kzz2DyGhH7V5TWC3lk69Hidi/NLPWlb9vDL/2g+NlNy96M9s6IXOvu
mDPpvNKaIX25j0Fd5xkY6D4Poh/HN/ykmO1Y2XiidIrmVyrO0ZfXOP+6p6I1
13lm1wAwxslrAAAAAAAAnENObS9mGarnNSIxR98QX73tteLnJ7bdV8pr3Pxc
JGfkk3mItu5PSnUqBsxr5B3dnDh2vk2aMiUmJv7+1dtf7j1f6bgDtesWv9NP
//pk9fNIqpbIhZOu7q4xkV1b5JNYOqX/flycqNNR+3WegRruc8396DqQqrdS
GIupUy5N7Htr7OvN7exf+g+pY964+sMzvRKAMUteAwAAAAAA4BzSUVqj4/E9
n1Xf7tQbxfn++zd+PPDnha/2PtYzT3/lU6X6GlOyz9Vx8Jc9216ernVxfM+z
MW1ced5hfNy++PXEdrl4eupfVc1GjBs3Ma6afk+s3nk0dc7K/vWp0s/cgVg4
/dupY59//QOx8J7LeupupK6pM7Yt+WFxDZZCn+9esiLumNDz99vKcgu1XecZ
qPE+19qPXMsbcc+U8yrG+tKrHojdyfBL/rz3TMjOqQCQJq8BAAAAAADASNPW
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
X98Jug7ELcXj/azyvPnv502/PqZPnxqzVr6T+vx09jt18IWYkR/D6fmWVcei
62Dp+i4uy1vckshbPLjl04p94/jvUpmNZF7j+OaflMbtumcyckCfxMJJpX3v
3/px5fEHSV4DGKvkNQAAAAAAAEaWs5/XGKhNLOUOora8xsWpGhFp+1dcW9zu
8rufi2M1l8c4/TVcMo9x3gNxoD0X7W1t0ZZvhVodbS0H4qUFt6Wu/6u3vxyD
qeBxsFifIjE+He/GtET+Y+We47Ud7HT3G9C7cXVG3qJj/6Ola7/yqap1V/Yv
Ld3D0v6dsXb6XxafmVeqLFLTlTjHxQ9Vf05qJa8BjFXyGgAAAAAAACNL/fMa
18TuxMR9LXmN9BoZaV2Hf1Wxbsr1M+bEqhc3R1NLWz/ZiLOc16ip3Rr7qoQW
2lsPxc6tm2L9iy/GmlXLY8mSBTF37uyYNuGCjPHpjOempo994aRpMXvB07Fx
z8Foy1W76tPdr3S9zY07YtOm9fHimjWxfPmSWDB3bsyecX2Mz7hXyXt4xeL3
qh61I1Gfo7T/yVTtjJsXrMio17IqVsz7Xsa+p09eAxir5DUAAAAAAABGlrOe
17jk4TiW/6SzszOj5fItveeZ5jUK9q/9ab/1PO5etjkjj1HfvMbltz8VR7Li
EG37Yt7US2o4Rnp8on1f3DOh+vaXXnVPbGw+VXm+09xv/4sPxsQarrNaXuOR
PZXrqBR1vJ1Rn2OwWZgzuY8l8hrAWCWvAQAAAAAAMLKc9bzG5YObMz8beY2C
ztZ9sWbJrJg26dLsufwrn4j0khpnO69xTaxcv767PsaLibZ+09Zobq0y/991
IO4o7+e4cTFp0qSYMnVqzJg5I5GRKMtrdMvF/k2ru+tbVMtSPLLz04wTD26/
w2v/reL7CydMjklTpsTU6TNixtSvD5jXuG31h9WH8ejzGfU50nmNSVOmxdT8
mFRrU6Z8J6576LVBrTWTRV4DGKvkNQAAAAAAAEaWs19fY3jyGkmdubZobtwS
S2dekc4gpGo8nH7GJPsYT0SVpU6qOrHt56X+XXBrvNp0vGKbgyv+az95jaTO
aGs9FFtfXBxXj0vWnPjlANc20H6fxLxEPY7r5r8WrRUX+m5GfYz8PdxVuodf
ve21qj04vuEnGff6k1hUPO81sftMgxg1ktcAxip5DQAAAAAAgJFl1Oc1Ojsj
l8tFrsp8frI2xBXz38nu89cf6F7DZfDOrEbHroXfKPbtwR1Z64WcjBVTsutr
dBauOd+yL/v9RN2Oa2JH7gz2O7U9Jg+w3kjH/kez71Vy33z/N7Zl7Jwf+TmJ
PEhy/80zLyp+fv/GjzN7XJBrb4/2fBtsXiaLvAYwVslrAAAAAAAAjCyjO6+R
XDNjYrzQUrlFMq/xw1f/kNp34aRSluCN05rsP7O8xv6l1xb7dtPKDyq+P7j2
p4n6IKXxSY5Ndt2KQ3FHX62M8++NI3EG+3W8HdOKfbg1DpQHPXIH4p4qeYtC
7Y6X7viL0jWcf2fsaO1K7Hsklk79SqoGSrX1VBoabogdGXmPXYkx/F7GGA6W
vAYwVslrAAAAAAAAjCyjO68RseGe/5jKNCx+cVe0tLZFa/O+WDv3psR34+OF
lkRWIHKxdupfFb+/4Dv3xoubNsXWPUfrct0FyboUhXbzgrWxp7ExGvdsjIXT
v536LjU+x38b4xPfXX77E7GzqSXa2lqjcevquCWRn0jlMk5rv1wiE5Nvl94a
q7fujcZ8P7eteSRRP6PKvcqfc2LZNlOmTo2pU6ek+pK9/yeJTE1PJmf+mm3R
3NwcjTtfjXnTL84enzMgrwGMVfIaAAAAAAAAI8vZymssTOQWMpe9qGJvcU2Q
ybElmdfYVeN6KO3J+g/V2xXzK49xfPN9ldue9/Ag+n/61923f2m9k4Faenz2
rri2hn2uiS1lnTqd/U7tfazGPmbfq1MHn63IdSQzGMvWrynew4r9T2yPW8YN
fN4frvtw0KOfRV4DGKvkNQAAAAAAAEaWs1Zfoy93cP1TMZilRQ4+/S/F9S52
J3bsOPybYl2G7y17r/+D5I7E03NvyqzXcMF37ojVO6vVzOiMvWv+R7r+w6Dq
ZCSu+8onBl1fo8cnsWHBjZUZhAuvjmX5fh8srudyTewoG9iju34dt0w6PyO/
MD5ufmhtHKlyI05nvxONL2Tuc9XtT0XziX3FdVSumP9O9kk7/3/27vzLqvpO
9D7/TD+9OoP59Xnus0xf/en2NUbXumt1nkTt7ttxiDEm6E1iUDuJqEElRlAT
xAFxYlSQQUBlUFEZlKkYCsJUBRRCAYVVCKdGvg/fDVV1ihoo4Oyz9znn9Vpr
r2jVqV2fOt99Vq/V37d7Hw0r35oQ7rz11nDruePOO8eGSa8uC/vjm9b9RV/P
MXSbczQsfPanQ3YaP7zjqfDxnpOX84aPSK8BVCu9BgAAAAAAQL6UptfIia5C
aGluCk1N54+WttGXI13nfrZQOHd0pTjfiAO0nZ+5pTk0N19e+VFoa+n7m+Oz
YEb7V1/Jz7W1nH9tc3NzGN3b23X+fR3hjW0f5bNvzg0cmhoaLswcf3/pF0uv
AVQrvQYAAAAAAEC+VFWvQc4Uwtt39d8L45W6b4Z4zYn+e5ScOyZ8fLzsUxbT
awDVSq8BAAAAAACQL3oN0rRzxr8WPb/k+vDIq8tC3Z6m0NzUEDaseDPcdX3x
800GPhMnC3oNoFrpNQAAAAAAAPKls7Mz2cOJz6yA0jsanr2puMkY/nhlw9eZ
Tho/A/GzED8TANVGrwEAAAAAAJAvPT09Yffu3eHIkSNZj0LVag3r5k4IN18z
dKdxy++mhx0t3VkPmXwG4mchfiYAqo1eAwAAAAAAIH+amppCfX191mNQ9bpC
W3NTaGhqDi3xfxuaQltX1jP1i5+B+FkAqEZ6DQAAAAAAgPxpbW0NdXV14eDB
g1mPApmI1378DMTPAkA10msAAAAAAADkT3d3d7JfvXHjRs0GNaf42o+fBYBq
pNcAAAAAAADIpzNnzoT9+/eH9evX991rI34NqlG8tnvvqRGv+Xjtu96BaqbX
AAAAAAAAyKeenp5w+vTpcPjw4bB9+/awdu3a8NFHHyV7O8uXL3cMc/zxyRfC
Df8+Ltz4Hw+FF6bNuKpz/a87/5Cca9F7SzP/u6r5iNd0vLbjNR6v9XjNx2s/
fgYAqpVeAwAAAAAAIL/ifnWhUAitra2hubk5HDp0KBw4cCA0NjY6hjimvrUk
/GTs5HDb/c+FJSvWXPX5bh83JTlf/a7dmf9t1XzEazpe2/Eaj9d6vOa1GkC1
02sAAAAAAADkX3d3d+jo6Ej2seMzIuIR7z/g6D9mLvo8/OeD08IdD08Pn2/8
e0nOee9jbyXnbD5+MvO/r1qP3us5XtvxGo/XOkAt0GsAAAAAAABQ6eZ9uCnc
9ce3ws/Hzwyb6g+U7Lz3P/V2ct5vznSU7JwAEOk1AAAAAAAAqGRptRqRXgOA
tOg1AAAAAAAAqFRpthqRXgOAtOg1AAAAAAAAqERptxqRXgOAtOg1AAAAAAAA
qDTlaDUivQYAadFrAAAAAAAAUEnK1WpEeg0A0qLXAAAAAAAAoFKUs9WI9BoA
pEWvAQAAAAAAQCUod6sR6TUASIteAwAAAAAAgLzLotWI9BoApEWvAQAAAAAA
QJ5l1WpEeg0A0qLXAAAAAAAAIK+ybDUivQYAadFrAAAAAAAAkEdZtxqRXgOA
tOg1AAAAAAAAyJs8tBqRXgOAtOg1AAAAAAAAyJO8tBqRXgOAtOg1AAAAAAAA
yIs8tRqRXgOAtOg1AAAAAAAAyIO8tRqRXgOAtOg1AAAAAAAAyFoeW41IrwFA
WvQaAAAAAAAAZCmvrUak1wAgLXoNAAAAAAAAspLnViPSawCQFr0GAAAAAAAA
Wch7qxHpNQBIi14DAAAAAACAcquEViPSawCQFr0GAAAAAAAA5VQprUak1wAg
LXoNAAAAAAAAyqWSWo1IrwFAWvQaAAAAAAAAlEOltRqRXgOAtOg1AAAAAAAA
SFslthqRXgOAtOg1AAAAAAAASFOlthqRXgOAtOg1AAAAAAAASEsltxqRXgOA
tOg1AAAAAAAASEOltxqRXgOAtOg1AAAAAAAAKLVqaDUivQYAadFrAAAAAAAA
UErV0mpEeg0A0qLXAAAAAAAAoFSqqdWI9BoApEWvAQAAAAAAQClUW6sR6TUA
SIteAwAAAAAAgKtVja1GpNcAIC16DQAAAAAAAK5GtbYakV4DgLToNQAAAAAA
ALhS1dxqRHoNANKi1wAAAAAAAOBKVHurEek1AEiLXgMAAAAAAIDLVQutRqTX
ACAteg0AAAAAAAAuR620GpFeA4C06DUAAAAAAAAYrVpqNSK9BgBp0WsAAAAA
AAAwGrXWakR6DQDSotcAAAAAAADgUmqx1Yj0GgCkRa8BAAAAAADASGq11Yj0
GgCkRa8BAAAAAADAcGq51Yj0GgCkRa8BAAAAAADAUIpbjc07D2Y9Tib0GgCk
Ra8BAAAAAADAxbQa5+k1AEiLXgMAAAAAAIBiWo1+eg0A0qLXAAAAAAAAoJdW
YyC9BgBp0WsAAAAAAAAQaTUG02sAkBa9BgAAAAAAAFqNoek1AEiLXgMAAAAA
AKC2aTWGp9cAIC16DQAAAAAAgNql1RiZXgOAtOg1AAAAAAAAapNW49L0GgCk
Ra8BAAAAAABQe7Qao6PXACAteg0AAAAAAIDaotUYPb0GAGnRawAAAAAAANQO
rcbl0WsAkBa9BgAAAAAAQG3Qalw+vQYAadFrAAAAAAAAVD+txpXRawCQFr0G
AAAAAABAddNqXDm9BgBp0WsAAAAAAABUL63G1dFrAJAWvQYAAAAAAEB10mpc
Pb0GAGnRawAAAAAAAFQfrUZp6DUASIteAwAAAAAAoLpoNUpHrwFAWvQaAAAA
AAAA1UOrUVp6DQDSotcAAAAAAACoDlqN0tNrAJAWvQYAAAAAAEDl02qkQ68B
QFr0GgAAAAAAAJVNq5EevQYAadFrAAAAAAAAVC6tRrr0GgCkRa8BAAAAAABQ
mbQa6dNrAJAWvQYAAAAAAEDl0WqUh14DgLToNQAAAAAAACqLVqN89BoApEWv
AQAAAAAAUDm0GuWl1wAgLXoNAAAAAACAyqDVKD+9BgBp0WsAAAAAAADkn1Yj
G3oNANKi1wAAAAAAAMg3rUb6Gg+fCIeOtAz6+nC9xqEjJ8PR423lGg+AKqTX
AAAAAAAAyC+tRnkc/KoleZ+ffOX9sGbzvtDe0ZV8vbjX6Ok5GzbVHwjPvLEi
+VrrqULGUwNQyfQaAAAAAAAA+aTVKK9fT3wneb/j8YvHZoW/zvw4/P75ReHh
ZxeGl97+tK/diMcjf3sv63EBqHB6DQAAAAAAgPzRapTfK/M+6+sxLnXMWrYh
63EBqHB6DQAAAAAAgHzRamRj7Zb9o+41tuyyLgBcHb0GAAAAAABAfmg1svP1
qTOjajXuHj8jFNo7sx4XgAqn1wAAAAAAAMgHrUb2xv/tvUv2Gk+88n7WYwJQ
BfQaAAAAAAAA6Tt09GRYvWHPsN/XauTD2x9svGSvsXBVXdZjAlAF9BoAAAAA
AADpe+aNFWH8lCVDfk+rkR/b9xy+ZK/x94ajWY8JQBXQawAAAAAAAKRry66D
fXv9uxubB3xPq5EvnV3d4RePzRq21bj38Vmhq7sn6zEBqAJ6DQAAAAAAgPR0
9/SEh59d2Lff/9eZH/d9T6uRT5PeWDlsrzH5zZVZjwdAldBrAAAAAAAApOfD
z+sH7fk3Hj4xoNWI998gPz4YYs16j/c/25H1eABUCb0GAAAAAABAOk6dLoT7
npg7aM//ockLtBo5dujoyWF7jdjaAEAp6DUAAAAAAADS8dZ764fd939w0rth
Xd3+rEdkGL/58zuD1uz+J+eGs2fPZj0aAFVCrwEAAAAAAFB6TUdPhrvHzxi2
1+jd/1+6ens4XejIelwuMm3+54PW64U5q7MeC4AqotcAAAAAAAAovUlvrByx
1Sg+7n18VtIH7Np/xP0bcmJdXcOgdfr4i91ZjwVAFdFrAAAAAAAAlFbdrkOj
bjX6m43Zyb02urp7sh6fc9q+KQxao+YTbVmPBUAV0WsAAAAAAAAj6enpCZ2d
naG9vd0xiuP0mTPhwb/MC7c/PH3UxwuzV4Ujx06Wdc64pnFtXQ/DH394bkHf
Gv36qTmZz5PH6wGAK6fXAAAAAAAAhlIoFMLx48fDwYMHw549e8KuXbvCzp07
HZc4ps9eGn70i4mjOsY+8lL48KM1ZZ8xrmVc07i2cY3jWrseBh/PTZvft1ZP
/HVW5vPk6XoA4OrpNQAAAAAAgGJnz54NX3/9ddi/f39oaGhI9m/jf3tPdYlr
Gtc2rnFc67jmce0v5nqoDaO9HgAoHb0GAAAAAABQLO7T7tu3Lxw7dizrUSiT
uNZxzePaX8z1UHtGuh4AKB29BgAAAAAA0Cs+ByH+t/X25mtPXPO49sXPwnA9
1K6hrgcASkuvAQAAAAAA9IrPQ4j/XT21Ka59vAZ6uR5q28XXAwClpdcAAAAA
AACinp6ecPDgQfdSqGFx7eM1EK8F1wPF1wMApafXAAAAAAAAos7OzrBr167Q
0dGR9ShkJK59vAbiteB6oPh6AKD09BoAAAAAAEDU3t6e7BtQ2+I1EK8F1wNR
7/UAQOnpNQAAAAAAgCjuyW7ZsiXrMchYvAZ6e42qux66CqFQ6Mp6iorSez0A
UHp6DQAAAAAAIIp7sps3b856jIpweMOSMH7sLeGmm25Kjj/O2ZX1SCUTr4He
XqOarodTO2eF740ZE8acO34w6dPSnbhrf5g+/ndh3LixYcryA6U7b070Xg8A
lJ5eAwAAAAAAiCppf7595+vhe2O+F64Zc314o/5UWX/31un/O9nzLz7+8Yn1
ZZ0hTfnsNVrDjDuvDddcc3247rrrhjy+e+6443dTw8d7Tg55ho3P/kvRmv0s
7CiUaLRTX4SbL5z32kmbSnTS/NBrAKRHrwEAAAAAAET52p8f2amtz/ftvT+z
4evy/eL2zeG2ok7jO7c8GF54YXJ4d8Oxohd1hZWTf5rcd+OW3y0KpcoCyiWv
vcbUm8YM6mSGO37wxPuh7aIzNL59T/9rvvVcaCnVaO1f9F0TP7iiXiPf14te
AyA9eg0AAAAAACDK1/78yLLqNU5tfbnv9/7T794PXUO+qjW8eN2FLuD7L5au
CyiTvPYa04t6jVvGPRrGjRt34Rh/7rij71knvccNUy5uJ1rDhhUrwoqlK8KO
5u7SjXbVvUa+rxe9BkB69BoAAAAAAECUr/35kWXVa7QX/d4/Lv9qmFcV+tuC
G18cdJ+HvMt9r3Hja0Pfg6LrRFj25P9X1GzcHNaUI3646l4j39eLXgMgPXoN
AAAAAAAgytf+/MhK1Wt0tR0Ka1e8G+bOnZscC5Z+EhpaBtcAXW3NoaGpKWx9
+zd9v/eBd7eF5qaG0NDQEJrb4p02ukLLuX9vavoyPHjNhf33bz8Utpz7ufia
hqa83TlhaLnvNUa8B8XA+3A8s6b42iiE5obi9RpC14lQ98mS89fDggVhxdq6
0HzhckiugeTnmwfeV2WIXqOrZf+562ppWJBcVwvCJxv2DtGYVMb1otcASI9e
AwAAAAAAiPK1Pz+yq+81CmH19HsHPD+j+Lh9yqoB++sbn/2/h31tPP7xic3J
vv31I7xmzLeey92zLoZSCb3GSPeg2Dr9X4e+Nk593rc+yXpd5PC6V4Zdvz++
uy2sm/6jC/9+fVhTPEBRr/HjaZ8Of1195/6wpql7wM9VwvWi1wBIj14DAAAA
AACI8rU/P7Kr6zVaw9tj/2HE/iI57pjZ1wVsnfo/RnzttfG+Cu2bw80VsP9+
KRXfa0z90dDXxgjPLTm88vFLXw9Fz1n5cphe49LH/WFH7805KuR60WsApEev
AQAAAAAARPnanx/Z1fQah5f9umhf/Hth0tKdoa2rK3R1tYWdS58J3yu+r8Ly
4+d/qKsQ2gqF0LjyT0XfO3Duy22hraUtFC7swRfazv1zYX946roL5/jniWH/
uZ9rO/f1tuGewZEzldBrDN8xHA3PXte/fs98+U3/t4brNdo3D+wtfjgxfNl0
KvlWoWV3mDHuB5fZa5y7phZsDC3xojh33exd/dcB99H46Zx9fT9aCdeLXgMg
PXoNAAAAAAAgytf+/MiuvNc4Gp66pn/v/I36jsHn3th/7jHff+7cT/RrL/69
xS3AAEVtwY0j3wsijyqh1ygM8Yqutv1h+thri7qJh8L+4uRhmF6jceE9/T9z
br2ODj51WPfsv4y613ilbvB1cXJ1//07rp20fvi/LYfXi14DID16DQAAAAAA
IMrX/vzIrrTX6G6c1b9v/sinw7yqK8y4tX9vfk3RBvrofu/on92RR7nvNc4d
1910U7ip+LjuukHPE5nw8VcDTzFkr9FatNZjwitbBvc753+2+B4cI/QaN742
9Hqfe03fs08G3R8k39eLXgMgPXoNAAAAAAAgytf+/MiutNcYcO+M79wf3pr7
VnjrrYuOc1+775qh9+b1GlkZ2Gtc6piwZN/gUwzTa0ztO+/PwpahbtyRKIS3
77p0r3HDlE3D/Pz+8GjvNTXoHhr5vl70GgDp0WsAAAAAAABRvvbnR3bFvUbR
z432KD6/XiMrA3uNW8aOC2PHjj13jAv33frPA9brjT09Q59imF6j/1kkw9wb
44Kd0//1kr1G8XNWhp1/0DWR7+tFrwGQHr0GAAAAAAAQ5Wt/fmQl6TW+e3O4
8847Rzxu/eF9YXlD+5A/r9cop4FdxcDbYHSFhWP/oW9d/umBVUOf4lK9xpiH
wv5hf39XWDn+v+k1ACgpvQYAAAAAABDla39+ZFf+PJSn+37uhmm7Uvq9xW1B
/vbfLyX3vcb3XwwtF3/78OLwvaJ7bMzeM0RfcMnnoXwvvNc03O8/1P88kzR7
jRxeL3oNgPToNQAAAAAAgChf+/Mju9JeIxz7IFzfu6///efC0eFe11UIbW1t
oa3QdQW/t2j//Z8nDv87cqoSeo2hmobVffe/OHf8ZIhnmwzTVWyc+qO+n7v2
ifVD/vaTqx8veuZKir1GDq8XvQZAevQaAAAAAABAlK/9+ZEVdxN/29JxGT9Z
/PyLMeH2aUPsr5/8ItzVtzd/f9hdlGyMttfov2fDzeHzwjAvy6lK7TXCqc/D
zUX32HhmzUXrM1xXcXjegHtz/PLNTaG40jm87pUB30+j18jz9aLXAEiPXgMA
AAAAAIjytT8/suJu4tt3PhpemDw5TB7yeDI8OWnhgHsWnNr4fNHe+5jwz796
Mayt3xMa9tSHlW9N6r//RnxmypRNw/7e4XuNQlh45//V97rv/PCxsPSTT8La
usOpvR+lVLG9xjlbi+6VMebbj4VDxd8coatYWXxvjnhcd1u48847w603fWfg
11PpNfJ9veg1ANKj1wAAAAAAAKJ87c+PrLibuPRxfVhz0Qb/1hm/uPTPffux
sL9r+N870nNYjg14fsaF41vPhZYU3otSy2uvMbWodxj2fezeXnRvlDHhl3P2
9X/v1Bd9998Y3FW0hmXj/+ew18I//W5mWDb1p0P3GiOed3Tz5/l60WsApEev
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
5lejZxRrX78kt+55m/KfKfu3x4XF7TwWc1/NrfWz916smRX5XxfdHy/uOVJc
3+cbV9ZZ7sGy5dJ2rVqSXebvUtmQ0vpW1Vzfd3/xTGwfzB2fN5cti6t/98f4
UX477xwaxYGAJjT8PfPAF7FhzZpYky8bNq2Je88vfa/90oYNxefWvLUmtvX0
N9lXk4mV9/w65sy5Ll7tbk1Qqb/rxbhizpy4Zt5rVf3YE9MXxf6N5LfWA8kY
3pmDLT9uibV3/M2E7SOcXHbElfn+o3955pPyp/o/iPOnlfcvfVjR0Dcv+qf8
NZjLLI2X/tPJ4UAsGNd96bXuF+P/Tjje2+ie5b8sXnOXLX4vnzEeiO0r7sr+
3r/h/E7/6jgnnwuoP77GeG9jwxsv57KZ97NinYc9L6NR53pM5XZau702Kbbj
GbF4w87o7uqKrkLp7opNbz0TV848vnjN/HhxYSyisX3ma6pt1TjGLbuOQ14D
AJg8ZDbkNWQ1AKB9OpnX2PH8I8WMwlVPfRTlo98ejg9WPVsaC2P+R02v/6On
H8rlNQqDxufzGt+59s+lMTsObMpnIe6Iny7eGJ8c+Co+3bE5bvhVPity1Z/z
9foi/iOfIfnnhe/Gx71fxb5dW+POW+7KLXftn4v1HzjUE6tXr40FCx4t1v8f
FneVV+5QaayP3PoOxCc7Nha3+1fzP0wtPBiPXDc3m9d4T16DY2ws3zNvXvD3
+d9MPlhzXJzi9+n55wf6eqOnpyd6e5vtlBjIzi2efW1fawYoH8j0Re/Q+npG
OV95dh19tetUeLyn6f0cwcE38n0O0+NP3Y3Ol5TJ7mdvX/lOjrT/a+/961H3
EWaKx2WEAzswVLfeoTr09I5wXhs9/020k4a3nVtvbtmeGGmXEn35ZZPzP/be
8YF47sr/lj0X377s5bJnkrlSCmNvFPqXHigbV770e+7CeRz1NTnQl9un5BiM
eAnWbnPNr6dWPTKNnYumzm/SZntGcW8afV96U/eIgfy12uwxa+B+kbtWe6vb
adPbHCge70zl403WfXy30dQYCWc9UnXcCrmAhvqQW5TXKNzzWnO/adII11nl
ucwUrt2R3nRH2+braOb9bNR5jZHaX73rsb+RcVZapKnjOsw1kpZux3XXuTdu
yY9dcXKDY3aNdI9s6j5RdYxbeB2HvAYAMLlM9czGVM5ryGoAQHt1LK8xuDt+
WchJPPVp3cV2rXqiONbFy8mXZIM9seD3j8ZVCzeW9wEUHl889PjgF7F0wdL4
2a/uzo1XcfXCuPWpj2KgmNd4NQqzk3y16YXsMv/7vo3lGz70UTZP8Z2r88vm
8xXfvXB57ClbLpf3+O5Fi4tzlXy1cXnVmBmVeY3P3nw8+/j/d9u75d8LHiis
Lz33SSYelNegTcbyPfPGe3807Bj7pX6PC2LuzReXj4t94jmxeEN63qADsWj2
t7J9GaW5zAdi7ZIbc3PJp8v3zo9lG2rPOZRWmAvi+PMeKdZvoGd13DL7lKpx
un9y01Mjfi9fWN95c5fGomvPLHv98T+5L3YPDMTb8y8qX/cPr4/1ven9mxZn
3l3dZ1SYi33aqdfHjhrb3rz0wrL1nnTSSUP/nhvv9vVVHbdCP/5Pbr43rpxZ
es2PH97SwP6X6lkq0+OBDV+NeFzOunlB3HvFD8pee+pP7hza//K+4lwdTq8e
K32oTTy8Zl96yQbPf+PtpPFt54/7k7dVrHdG3DT/njgn6Xs64dL4MPXGdHDb
i3HJGRXrPeGCoXZevd5m7HnuX3PrOu7W1FjypT6lM+e9Hitv+W72v7+fbluD
pfE37sqfv+auycSBWHnPZVXH66yh9rI3tdRwba6Z9dQ1sDuW3nxeMZdSKOfd
vjz2pt5UGz2/xWt5/nPx3NwfVy3byP1lVHmN3nVxR8X1d/xPbo17rz0r+98/
Lx6vZGf2xvKbf1x9zK55bOheM/xmhr1fzMq1y3vmXp5a5tLc2P8Nb3PoPnF+
bj1Lnp2X768t3S/uevXTGNj3RlxyUvl6fr34/REP0fhuo5l4e+FtMWf27Ljt
1erPstuL49kc+7zGvg1PxPkzqtv54jX5T6396/LX/4zyfMDg1rgyf15+XTZm
TyaWz/nL7OM3vvr5sFVv9DpLZx+uveKsGu8NlStuvP0tmPUXkXvfK//+uH97
/r30rAeH3vf7mn4/az6vMXK7qXc9vrHmD9XHMFvvFmvwuI58jdTQUDseiKdm
F/bvkfz/z9X6zBcN3yMbvU8kn62qj/H9sXLh7a25jkNeAwCYfKZyZmOq5jVk
NQCg/TqV1/hq04pcluKix/Nzf9TTUxzX4u5NXxdzE9+5emWUfUOffry/qzh2
RXFOlatfjYOpvEbhm8D+XeviV7c8XJwbpVi/rauKr0vnNSrnSPls9bP55VL1
6T8QH+/4LD7p+SyW/+6umnmNwlwt5z6xq2J/M/mxNJJxQQ5XPCavwbHXnrxG
up+ivO/7xZ7CDeFA3JvvH7htTW4u8z3P/aK07EkzYtas75X1ubw4wsRJ1eNl
747rU3U5beY5cUaqPn9xzcuNrS9VKvuPaz6e75/YWBiPZNpVVZmM167N9bdP
u/ipmr+RLs5rUVZy/a+Vx61WPZNy0ZPvNLD/ST9Y9Wvvaqh/q3ReZ8/6Yerv
S6Mw7FFpXPJcOXHmzJh52ollry3cnhs9/w23kya2ndiZGi89WU/5srn+qcLv
ofevvb/sudOG1p1uAze+VD+nOKJ9L+TXNSPV5vfGHfmx9e/adDgOvvarfFu/
s9i/lPRbFvqz1mfqnavhrskvytvCiWfEzJknlP4+tZQfqdvmln3S1Hpq+6LY
xouvT/dTn/d07ppp4vyOfBwa6attNq9RmtsmW7/Tzqi6f5TWsyOuS9dnqF2X
7fPQPWTrMJmN4e4XC2ZWPl64JzWzzQPV68n2QddYd8Xjlf3rlSZmGx2y75Vi
bqWhMQRS/dxv1uoUHsjtX+E6T7exPSv/tep+k/77smXJnBOle8TPi3NQpO8L
08rfb/rXFev/x65h5qcY03VWeR9NvTc02f4q3/eK1St73+8bw/tZI/eAxtpN
vevxtbceqH789FbnNRo/rsNfI3UU2/G5sb7OPal/++PF3GOpHdc6h43fIxu9
T5TGoWrwGDd7HYe8BgAwOU3VzMZUzGvIagBAZ3Qsr7F1RX4ekVcr5kGpVMov
zH3vYGpOk4rXVT0+GO/mMxFz3/uyzjLlBg7sjmeffysWLVoaf5vPeVy5otCn
lqzvoWL+459/91hcffuC4t/X1fg9VqIwJ0tlXuOj/Fwwf7dwe/kL+kvzpGTz
KWXHIJfXGOjdHouWvR6Lnq5f5j/9XuxpdHoESGlXXuO4ix+MHfk+4z1vP1D8
Dr70PX2p/y/3WCk3cOa8Uj9V8pvtwpgB3583/G+10/02Sf0Kv6lP+q/fLfaP
DcTaYo7ijGK/9rDrGyqnXP5Y/nf9mXjulr8t9QOcfV/s6Muvd9GFxfVm+332
vVDssyjrL0qPg/Bu/X6k0njq6f69yuNWfdw3dXfFiiVPxgfr7294/wtjN5x8
+8j9FWX9Jj95sPib4v0bHyqe58K4D8U5dKadGy+l5qzfv/mJYh/gbW82c/4b
byeNbzuyfZKFPpvjh/ap8Bvk/Rv/mBpvo9Cft7vUH/bDW0vjiQzsjgXF33aX
j8XRnNJY8sXfvRfb0rm5c7b/lfzfM+LF/LndvvQfc9s+6/Hi+FTNXJPpPuGb
lr1f7NdNL/vjqt86l7e5rZnm1lPLzuU/K77+18tK1/zGpYU8TW5+gWbOb/3j
8Lvi45X9wNWay2usLdwvh+o7763CyF17Y+kVf1nVF1nKdiX7XDo2O1f+Z9Wy
dY1wv0jayrxVm6Nrw0ux+KXtTW6zfD2FMWT6d/6prC//tpdy/bwD+1cXx9oY
qd4TsY0Olu33ubXzF5X6V1eMSzJ8KR63VK4iud98WLjf9G2NO4rZgVyWrHhO
z3useA8ozw6U8hIH1/4m99hxw2dTRnudnXD2fcX7aPq4npk/rqNtf8PlNQqf
S0b3fjZyXqOpdlPzehzm8RZp5rgOd43UVWzH0+PyexbEwvnzY36x3BPXzjm7
rB0/UcwCVZ/DZu6RTX2+bPAYj+o6DnkNAGDymoqZjamW15DVAIDO6VRe48N8
jmHkvMbhWH77XfnsRE8TeY2hbSx7KJ97OFx3mbSvNj1TNY/J3RtLo3h8tvrx
qucL5eGttQe+KNShMq8xuOet4jwv897bG5kYjMyB3bHg9vtK266T16hVz1rl
dWNxMArtyWtcGh9WjGVe+F1ladz1GnmN/N+nZvsN9hf7QvZveCmefHbV0GPD
300q+21K9ZkRd6/YHL2Zwhr3ZvskVr21edjftdbbn1IOZEb5mB+D6yrGCS/N
mZ4ey2PfazfkX1897kaZmuOOD5fXuKAsf9LM/hfObSP90KX1nls1f/3mBf9U
dg52rngg5sz6YVyW+r13YT/uHdX5b7ydNL7t+scwu57iuBu585A+rq9UNaCP
irmRkfv/63vtlu/k+hvzv/ctjilSHFu+9Dv8f3kmyRMOxNLz8/2Fqf1t/Jos
/X3yNa9X1WfnovLzWv94Nbeeapnifnz78ucrntsbd8w8Lk783jmxbNPBUZ/f
8uOQqdsPXK2ZvMaBuC9/fs6sypmVflOeW0/qmNX4fXfxvnv89cOP+TDC/aK8
Hs1us7Se8hxD6fhVjle0+d6/b+hYTbg2msrhJfeAZduGGZsibZR5jXSe4NXK
/uTUOn/90qcxuP3Rin2uHD9pevyxK5f3KNxjRjo/o7vOqt8b1pZ9fugbdftr
JK8xuvezkfIaTbabevOGNDSfyGg1d10P975XV8PteEbMezM9z071Z77G75FN
fr5s5BiP9joOeQ0AYHKbapmNqZTXkNUAgM6aCONrPJieH2RUeY2v6y5TZjAT
n+z6LD7YuD7+45a78rmHe+Ll3qPRv+vPpbE1Fq6Lj3u/in17dsaC391XzF38
+UD1KuvlNZLxOlYtmjds3uLujbXzGnGoN9Zt/DjWbapfVm/aE/uNr8EotCWv
UWPs6beLv3et/3vZzYv+vvz7/pNmxMXX3huvbthTc86Qutsv1G/wg6p+he/N
uiTuXvJadPeNvMZ6+1O336BGH8G+1wq/x70gP95CqT+6MAZFXc3mNSqPexP7
P5r+reNqzOXSXzw25fM39HZ9GCuefTLm3zM3rphzdtmY582e/2bbSWPbzve1
FfMQ5efhjNR56E//hnzoeM6ZMydVTi8+92+vfl5Vl0btf/uGYltO6vPcnP8W
lVmMtff+dW6Zn78QSf/WJfn+2Ce6Sm8OjV+T6fETpsecK+aU7VfxN8in3pod
T6X+eptbT7VUH/BwY8+kNHJ+G6lvS/Ma/aUxdB6oMR/Ixvy5y64nNX5CrX0e
3Fnogy/Nx1N7m8PfL8rG+Gl6m3XWUzfH0fg9ZWK10dL9OzfeRBMfxIrnZ0Ys
G/oM19PdHd3p0tU99Nj6uLJiXJLieAk133cHYvmc/546RqV+7rvWD7W7wfw2
v3d+XHvJKfl7SDIGSmmMoFrts5ZmrrPa7w2F8Z6G3hu+Wj/q9tfJvEZT7aYT
eY0mr+vhrr362yjlNS6+9o6YO3duzL352jinbG6SWtmyinPYzD0ymvx8OeIx
HsN1HPIaAMDkN5UyG1MlryGrAQCd17G8xqYXspmE7160ON4f7idLhz4qzg8y
fF6ja1R5jYO9+2LL1u7Yd6jyu7gv476r5xZzE4XxQP73b9dVLHewbLlK9fMa
OZ9sfDt+dcuC+KfrFsTPbl4eS958L274VS4n8kJP4bNRRV4DjqG25DVqPF/d
f1Kr/+VAPDf3x+V98cVyRjzTNfzvH2tt/+D2P8X5M2qtb6guN71c3TffwP7U
7Teo1UeQmvvkxje/GlrmjfxvOsv71WtqNq9R47g3uv+j6d/6Vq253vc8XZyn
I9vP1v9BXDez9vYr+/oaP/8NLtfEtgv7X3P++orzUBxDZITyF79ePeKxrH+Q
C+O5XxDre7fl+2DrZDGOuzW2bX8i339aPmZLw9dk/7piOx2+TM+OKVJ3vU2u
p1oT+Ykmzm/943CM8hoHCxmfGdVjIkTFsR/Yke+jz83zUqVq3J56x6Ox+0VW
09usd5zq5ThGkdeYCG20mN1KzaXUqPT5qfvGU93GdubH1knGm6mVRyvMV1JY
vjBuxvfnbYmDm3PH4NuXvRw7C+M6/fyF6Nv3dH4fRxjjKVvv5q+zWvfR4vwr
yXtDb1eL2l8b8xrNtptO5DWavK6Hu/bqKtb/3FhfMVbRytRccScPfb4oV3EO
m7lHRpOfL0c6xmO5jkNeAwCYGqZKZmMq5DVkNQBgfOhUXiPJV/wyn8P46VO7
6i727pLcGBTfvfCZyM5c3L89m9/4ztUrIz3NQPS8G387irzG8ttzWYuba2Qt
Vi24t/j6D5fl6nHuE9V1XZ+vY2n+kpJ6eY2BA7vj2ZWr48+7KvqX+z+KH2X3
d3nsLD5Yntfo3/HG0L7eEz/61e/rlu/+YnG8L9vBKIzvvEbeQF9sW/NSzJ97
TZyR/s3mCH0Kw22/r3trrHhyXlybGv8gu+1hfsM/Yl6jqh+wdh/Ba9d+t9hn
tn3lvxZfO+JU6S3IazS6/6Pp3zqlYv6Dsrpkx1sfiKdml7b1wzm3xMInV8aa
DduiL7O3aiz9okbP/7DLNbft4m/YT69xDIvZiXwf19rS+CrvdndHV1dXqnRH
d0/u9/I9vY0OMF/LF/k6To/bF96ey8BUzodR7D88N+be8fNsnSrnpGj8mvyi
eEx+/PB70dPdVbZfpXEAerIZn/rrbW491YYfXyPTuyM2bdoWPX2Zps5v2/Ma
qd+5V+YYEoXfg7dzfI2y/RvD+Br18hqVx6/leY3x0EYPvlGeR2tGQ/301W1s
2HtT1fgaqfvT2XfG8nv/T/a/L3rm86EnXshluo6/Khbem7tf1JrXo3L9o7nO
aq23OL7GcbdGd8vaX2q8o2M+vkaT7WYija8xqrxGrfqnxyBJz39X/lxufI0m
7pHR4rzGWK7jkNcAAKaOqZDZmOx5DVkNABg/OpbXiChmIJJy3XNdFd97D8b6
55cUn7/y1S9yD+fH0UjGn/jTnsJniIPxSH7+ku9cXZ3XmFcYdL9GXuOj/LgZ
37n51bL8R/+uNdncRPLcw1v746PnH8nlRn6xPLanIxYHPsrXJz/+R9U+1s5r
fLXxmXx9V8b+1D4X5kj5u8XbU0uX5zUKc8kMXx6Md+Q1GIXxm9fYHffO+UH2
+/UXe8pfu3npL0eV19jz2u+y/fhVuYL+D4pjzg/XR9uqvEb/9oei8LvbGfnt
XrTsk2H2ZLj1NZ7XaGb/C+fn+3dXziM/zHGZdmlsrXiurI0Mbi2OzX/Zso8r
liyNx5/rq2n0/De4XFPbTs9xckbVb32Lc6UU8xql34lX1iG7H7NPj5kzz49l
24afDWwkxWOZL39R1QeaHtM9VyrnYGn8mjwQ952WW0etHM6+obY087TT4ifX
PDVCX3hz66lWat/Vfb4H4s78efv+/S82dX7bntdI78dNFfuRGnOncOzvHWa9
hfETRhwLoZm8RtPbHA95jXHQRge+iDWrVsWqVWuit5FJutJGmddI5wmq+pZT
fd6XFd5TqsaBSMZaSJ7YG7eUzVnRQJtv8j6afm/YUbH02nz/e+589I2+/VXk
EPbkxx+plddo7v3s3GHGPcnVoal2M2JeY6TtjUZz13Xr8xpD9r9SmhsmGR+q
uI+V94pm7pGjzWvUOcZjuY5DXgMAmFome2ZjMuc1ZDUAYHzpZF4jmXNkwS1z
ixmD7/7iwbh+wZ/i1gVPxs9+Vcoe/MPij1JjPGfikasLr7k/7lj2Stxw3d3F
ZZMsRiH/UBj34m+uXhDXPTW0jlpzqfRuLOYykjEp7nn69bjz939Ire/PuWUP
bS/mMpLtXr/o+bhzwWPZMT0qt5tWdz6U1Pr++uZnYtmb78Sd+czJdy9aWDHv
SeV8KIOR6T88QmlurmUoGM95jULfzymXP5UaeyITK+/4P/n13jnsmBSV299X
GMti2oxYvKl0Bfd3vVj6DWob8hrZfrLT0v1kI/xOftj1NZ7XaGb/C+fn+PMe
iZ7M8B0Ypf6tpN/qqeI29629Pz8nR/L74y25sdnzf595d6rvaGBvLL3iL4vr
yC7b8PlvcLnBZradKC2f/P78za6D2XVufPLfy85b9jwMfhCXFB479fpY31u4
Hx8oGw++NHfJQKx9cl7MnXtPPLNh37DHtt5xTsqNFVmMxM6lPyurX2XWpJlr
cntqXZctfr/4vpy0l2L/28VPZR8fbr3NrKeWwvwP2fb5UinXtP25wrmYHs/s
3N7U+W1/XqN8P37+8DvRN7TDmZ71ccvM44qPV42hULHPe95+oHhNVfVpVmoq
r9HsNsdDXmMctNGB3fHswvkxf/7y2N2mvEY6k5GMmbGj0P88VJcFs79VvMeX
rv3SmBu5+1lpXJ7CXCnVfel1NHUPr3hvuLz03rDn7d+Vll2cy3002/4KOYRp
Zz049I6as3/zo/lxEmrnNZp7P5seD6/ZHt1dXbFt27by0tWdzWA01W7qne/i
PCDT44E1e+reB0sysXZJ/v1jU63/EynXzHE9JnmNITuXl45TMq5YTvW9opl7
ZFOfL0c6xmO5jkNeAwCYeiZzZmOy5jVkNQBg/OlsXiNxOFY//0SdMSLuj7tX
7616xUDvR/GrX5Qve9WSFXHhL1L5iiGfb1xZyoL8v5dj/+EaeY0h+7e+nZ1j
pXL7/3jf27EnFXvI7NkUN/yqerm/vu3V8jE3UgrjctSa8+WrHWuqtptkNZ7Z
UbmyyrwGHDutymvUyk2kv0+vfL5WXqNyLPXtS/8x1Zc0PWbNnl3qi8n282yJ
4VRtf3Br2e+MT5x5Tsye9b3UNi6ND4fpr6q3P8PlNQrzZlTmMdL9PMP1VZdX
YHXZPBz1jlvd497E/m9O9fEkZbjxPypzBNNOmhGzZqbWe9yt+f7BgXj+kvT2
z48r5vyk2GdUKCff9E7+GDV2/htbrrltJ/avvb98v6pK6bzuee2GsudmzppV
VodvX/586hyXfpf9rdT2RpTup62T8Rnc83hpn2pcd81dk7vLc0WnnVHRXpLf
6Q+OuN5m1lNb+euTdnvOjNT6znts6F2zufNbv77V11N9w/92vdoXsWDWcO2p
NIdFehyDwj7PmnlCw/eq3E42dr8oamqb9dZTf/2jyWuM+zY6dIzHMh9K9fmp
VLuN7Vz+y4p73qyytl7KneWUsnrp/vKhe9zbqftWQ+9Do7zOCuXEM2JW+rgW
3xui6TZf/h41PU6bUV6HZL6Y3prLNvl+VrMUzncT7abm9RgV9/WkXBVbhz0R
pfePkxt5/2jiuA5/jdTRUDsuzR2TlLvy42lU3ysav0c2dZ8Y6RiP5ToOeQ0A
YGqarJmNyZjXkNUAgPGp83mNvP6v4uOtH8fqjTuGytZ4b8fncXDYISIOxye7
PotP9vTG/kPDLNifif0HMpEZHKw5H0pJJj7ZsTO2DK1zy9bu+PRA/c+V+3s+
iw82fRzrhsrHPdVzKjcnt911W3fGB7v21Rn//bC8Bm0zlu+Zi/NCnPVInfE1
7q/7fOH79FK/0oHi9/QPFOcuz8TbC39d1ReUfKd+0+JGxjWv3n6m+424btZx
VX0A3zv71lg/QgdFvf0pzm9yemVeozAOfY0xuPc8Xtz2yP3CecVxHM4t/718
xXEb7rg3vP/9H8R1p1X3kdQ+LqX+rbK+uKHyw4vvi63pSmR2xL2zT6nY/vT4
+fyV8dqif8n3vxTGTWn0/De4XFPbzh/yoeN15czji8ufcPZ1sXDBZbm/j78q
dqT6fPZteCLOP6myDtPj8nmvV4/hkD9nZ84buR2n93NRYb6T0x+s8/vnUv/h
mTXG/m/umkzsjeU3/7iqvZzwwyvjpdT8LsOtt5n11JX8fv/aM6tef97tz5fO
VxPnt359M7F09v9I9SkO50Asyp/Hyv7xYXYk3p7/L6m2Oj2umb8orsyfs8vS
/cgDu2NRjX1OrqkPG+lMHel+sanGcW94m7Xu14nU8auYp2Lzgn9qqM1PqDaa
nmeh6bzGugZeO3TN58fMqDxue976Q5xTeb858Yy4+5nN1as5+EZxvIeycXnq
PT6cUVxnp19+b9xx/l+UvebUix+sHsugqTb/RSyvWvbcWLzq2dz7bvoe2cT7
Wf/mh6q2X13S56zBdlPzeszZvvzfyt63hs8MHIgH8/vSWE4sGj6uI18jNTTU
jpMs4dOlDGP23PTVuYc0do9s9j4x7DEey3Uc8hoAwNQ1GTMbky2vIasBAOPX
uMlrtEM+r/HdXyyP9/bsi097x//nxoO9++KTPR/Hf2TH9ZDX4NibGN8zZ6Kn
pzu6u4dKT29jY1GMtMa+3tz6hkpvXyvW2Jz+YsYhN298uzW6/5m+vugbKgPD
HKJiXuP0B7MZtL6eBtbb25M/nz0xwvD00fj5b2y5hrad9G/dfE3cvWxtbj2p
A3Cw8Jv0OmPG9xbq0N3Ivk0QmVJ76ekdaWCHY7eegXS7rfPy5tpW++x76w9x
7c0L4t2eXOZ0oNimDsQd+b7I296tzoSW9rlnaJ/bs0Od2OaYjZM22l4D0Vuo
a4veGxvV/HWWq2tXA8e1mfY3MHS+evLrHemtvJH3s1Eba7sZyGTr1tfIwdz/
SjbP0HDGprCJcX5dj/Ye2bBmjnETJsbnaACAY2OyZTYmU15DVgMAxrcpldc4
9FH8KDX3yP+cv73TNRrBwfhtxfww78hrcIz5nrm9sv1FPeuLv/X9/t0N/j52
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
AAAAAABAjrwGANAu8hoAAAAAAAA58hoAQLvIawAAAAAAAOTIawAA7SKvAQAA
AAAAkCOvAQC0i7wGAAAAAABAjrwGANAu8hoAAAAAAAA58hoAQLvIawAAAAAA
AOTIawAA7SKvAQAAAAAAkCOvAQC0i7wGAAAAAABAjrwGANAu8hoAAAAAAAA5
8hoAQLvIawAAAAAAAOTIawAA7SKvAQAAAAAAkCOvAQC0i7wGAAAAAABAjrwG
ANAu8hoAAAAAAAA58hoAQLvIawAAAAAAAOTIawAA7SKvAQAAAAAAkCOvAQC0
i7wGAAAAAABAjrwGANAu8hoAAAAAAAA58hoAQLvIawAAAAAAAOTIawAA7SKv
AQAAAAAAkCOvAQC0i7wGAAAAAABAjrwGANAu8hoAAAAAAAA58hoAQLvIawAA
AAAAAOTIawAA7SKvAQAAAAAAkCOvAQC0i7wGAAAAAABAjrwGANAu8hoAAAAA
AAA58hoAQLvIawAAAAAAAOTIawAA7SKvAQAAAAAAkCOvAQC0i7wGAAAAAABA
jrwGANAu8hoAAAAAAAA58hoAQLvIawAAAAAAAOTIawAA7SKvAQAAAAAAkCOv
AQC0i7wGAAAAAABAjrwGANAu8hoAAAAAAAA58hoAQLvIawAAAAAAAOTIawAA
7SKvAQAAAAAAkCOvAQC0i7wGAAAAAABAjrwGANAu8hoAAAAAAAA58hoAQLvI
awAAAAAAAOTIawAA7SKvAQAAAAAAkCOvAQC0i7wGAAAAAABAjrwGANAu8hoA
AAAAAAA58hoAQLvIawAAAAAAAOTIawAA7SKvAQAAAAAAkCOvAQC0i7wGAAAA
AABAjrwGANAu8hoAAAAAAAA58hoAQLvIawAAAAAAAOTIawAA7SKvAQAAAAAA
kCOvAQC0i7wGAAAAAABAjrwGANAu8hoAAAAAAAA58hoAQLvIawAAAAAAAOTI
awAA7SKvAQAAAAAAkCOvAQC0i7wGAAAAAABAjrwGANAu8hoAAAAAAAA58hoA
QLvIawAAAAAAAOTIawAA7SKvAQAAAAAAkCOvAQC0i7wGAAAAAABAjrwGANAu
8hoAAAAAAAA58hoAQLvIawAAAAAAAOTIawAA7SKvAQAAAAAAkCOvAQC0i7wG
AAAAAABAjrwGANAu8hoAAAAAAAA58hoAQLvIawAAAAAAAOTIawAA7SKvAQAA
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
AAAAAKBcyTPp7du3lz0MmFKSe0KvAUAj02sAAAAAAEC5kmfSL730UtnDoJH0
VqJS6S17FBOS3BN6DQAamV4DAAAAAADKVViv0dsa9910U9w0b14san79zH8e
79vhZx+IefNuink3Lo7WcWYX3bsfjXObmqKpf/svd204MwMsgF4DgEan1wAA
AAAAgHIV1mt0vxCzBp/jn7fAfB5T2baFnx34nZqaZsTGrve7b7JdHTsrZ2aM
Z5peA4BGp9cAAAAAAIByFdZr9LwQlw7Nu/Dimf88cvUdfirmzpwZM8+/NB7b
2537nh33fWGwt5gVW8bZa+xffs1wr/HJu6NzEsZcBr0GAI1OrwEAAAAAAOXS
a0wv3du+M9RT3Ln1rdz3TKTXiDgeW9eti3Wr18XOjr4Jj7cseg0AGp1eAwAA
AAAAyqXXmF56dnx/qNe4p+Xt3PdMrNdoDHoNABqdXgMAAAAAAMo12b1GZ9v2
WL1yWSxbtixWrl4XLXuPDn7QCzGrjl6jt+tQbF23emD/gW3l+mhpOzZJozse
e1uaY2Xe+MbUG+27tgydV7Kt29QSnb2196h0Hoq2trZoa0/XHEnOa9Pgea1c
uS62t41Yi6RyJFqeXRcrB4+/duu+qNQ1ro1D+yxbtjKaW/bn7tfbf/y29vbY
sfzvhnqNG5a+GB3tbQPj7MzsVNVrVNLPaWvZ2H/+Kwe/t2fj1c5aLUMlOtrS
Y3Z0VX9BI7+Tkee8+tlt0XH6k+6/xrbkX2P946z12eOl1wCg0ek1AAAAAACg
XJPXaxyJ5TddONQCVG2fuyNa2rbE3DF7jUo89+D1+fv3b5+65O7YOYG5Hvat
e2CoFxm1nf+VWLu3O3e/nsPPxHUX1Niv6dyYv3pPzl7H4/739rno7ti0/s7c
/S+65R8jqQr2rfy/+cf/1NXR3J7fDIw5rv791rZV77dj4R/V/G6Tbf7G4bVR
hnuNq+PZlua47pz8ff520eYYVUV0/zJmDL7+iQXZ6yr7ndwfLc8/EOfW+E7v
eXZ//o/YeygWzzuvxjV2W2zdu3FoDpfqzx4/vQYAjU6vAQAAAAAA5ZqcXuNI
LJxZuwUYuY3uNd6MJXPr2XdWrG3vG/fojj73rVHHOuecc0Ydu7mj+tjdOx6u
73wWbBjRLRyPxXV+HxfMnHma99wWh0acT/fu+sb14+3D653suO/PxnzvnVvz
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
eg4/E9ddUGO/pnNj/uo9OXtlfueL7o5N6+/M3f+iW/4xkqpg38r/m3/8T10d
ze35zcCY4+rfb21b9X47Fv5Rze925DUx3GtcHc+2NMd15+Tv87eLNseoKiJz
7X5iQfY+yX4n90fL8w/EuTW+03ue3Z//I/YeisXzzqtxjd0WW/duHJrDpfqz
x0+vAUBZ9BoAAAAAAJBvovNr7F81PL/Bhfe+nPueo+u/nnlPtm14M5bMrf3M
fXibFWvbq1uQ7sw6GHdurdFr1PGefEdi4cx6xlWr13j/51WPo899a9Sxzjnn
nFHHbu4Y+Z09XN/5LNgwols4Hovr/D4umDnzNO8Z2ev0j2t3feP68fbh5mbH
fX825nuzv/dwr3H67Yqlr1UPrua6N/V/JwNj33VixFm3xu01u5l6rrHx0WsA
UJYLP/wv4z996F+UPQwAAAAAAJhyJtprJPMPDM3z8Mk74sioN1Ri+VC7cG6s
yPQJ+1ddU/VM+oafbI7OSlIK9MbhlhVD81cMbBfdH9npKM5kr7FvyeU546pE
pX/b9/yPM3OF5D9Ln8h5nd6RWJh5zn/jog1D65hUOl+tmq/hEws2Z/b7VVyX
/dw/vS02th0b6DKStU3WfO+KqjHfUzUfyeg24cp7nx44p7x9k+3iBU9Ee7KG
R28ldq//btXcE9VznbTGzZnXzr7q/tjZ0RW9vb3R1bEzFs79g+Hjnp1pPfqP
29X/e+xfPzyXxzfWHuj/c1d0dXVVraEystdI5jbZ0p6e+8jvrKnpK7EzG6uM
o9e46JafRdvAQiy90bG3uXq+kCt/Vj2mxZ+v2vcbS19M1/XpTa+xkXOn6DUA
+KD689/+rbjww/+67GEAAAAAAMCUM+FeI3pj1bzfH3quPGpNlO4Xhp89V7UJ
h+LWzLoUdza/kTO4l6oagwdahp/zn7le41DclvnM+WtfH/2Ww09VNRvVz9In
dl6n1fdqZt9/GN169L++cN5VMW/enFiwdHi+k+wcJ8maJqO7mojdS64dfs/F
P80cu7pNqJ4jJVF9Dfzhjf+Yc+zLc3+Lo89lxjWiaUi9GfdlPnv+purvsyf7
G9dY86aq17j4oZw+5khmrotZsbEz+wH19Rrn3bJh9Acfe2b4OvlM9tpvrfr9
78xbz+foM1XNhl4DgA+qL/zOb8VF/+5flT0MAAAAAACYcibea0Qc2/adzLP8
6jVRsp3Alx4/MPT3vv2PZvqBvGfoqexcFedlnlmfqV6jZ192XLXnvsg2ANln
6RM9r9MP8JXM/ByzYmnL0Tp2qlT1FPfU7EOyHcGs2Dg0+GybkP37sOx8EXnd
RM+OH+X8FtnOY0Y81TlqtwF9u3+Y+a42V71Wz2+c/a1qnXt2fZWq49TVa8yI
5tyxZ99zWWwZjFF6MueTdDGjG5XU7sXDjYteA4APqi/8zlnxOb0GAAAAAACM
Mhm9RtWcD1VromTXQql+zt+9bfg5+8jGo0pmvZXsvA5nqteod1zZZ+7ZZ+kT
Pa/T640n5lSvlfHpmXPj2z9YHs0t+wbXXRnpeGaOiuFuIM+2hZ8dfl+NXmNL
Xq8x1ESMmJ/ivdPN/S2OV82d8eUfLIlHHnlkxLYsliy8Ive7rn3c2mPLG3vi
8Jr/PYFeo9Zx8zuX7Ji/uGhP/oCSj973sF4DgA+8v/jds2KmXgMAAAAAAEaZ
lF6j3/NDz/kza6Jk10K58snIlgTddaxjkQ5w+Hl5dr6KM9Zr1LtPjef4Ez2v
unTtjFsvGO4cRm7nX3JrNLd1Z3bIdANjzBmSyJ+LYny9Rt7rtXqN7JoidW2f
qR7/ZPUaPbWOM4m9xpacXqP2XCcxsG5O/mePn14DgLLoNQAAAAAAIN9k9RrZ
dUDem1ciuxbK/I3Vz9Kzz6znN78xxgCHn1l/8stPDK0dUUSvMea4jg3Pj1Gr
13g/51W/Sux+9vH49k1XxYwabcM9eV3En2bnPxltuG04Nx7b2zN6/zPYa8yc
PTfmzJlTc5s9+3Nx5V1P1+5+JtBr1DzOGe41bsisETTK4SfjXL0GAB9wX/zd
s2KWXgMAAAAAAEaZrF4j4kgsfG/Oh0/eEcmSGMPrdnwlXh2xTEf3tu8MPbM+
b8Hm2ofNPLOutR5KrTkKas6ZMIZ6x5V9X/V6KBM7r/enNzo7WmPT6kVx6TnZ
uSgeHpyL4s24/4LhbmBjzQk2emP9TX+S0yCcqV4jO67LYnveUi6nUc98JlOu
18ismfOHNzxd89yyvZNeA4APKr0GAAAAAADkm7xeI2Lf8r8afL48Ix7f+mzM
HatbOPpPw/NCnH1bHKpxzG2ZdVbem7cjkX2+/rdLX8vfN7O2R729RrajaGr6
arTWeNuam/9D/rP0CZ5XPXorlaj0b/l5w6/i5qbhBmLL4MQdz33zj4c+7/pf
vJ5/4Oz6NZl9z1yvUT2useYjqXR1RVf/NnIeknrmM5lqvUb19zwrmjvz9j0S
t2fWvNFrAPBBdbFeAwAAAAAAck1mrxHHnsldm+PHe/OeE1evhXHxXRtG9Qfd
Ox7OtBMz4qmOzLh3Pzz8GTldRN/+n2eeiY+j14g3476Z2efko8d1+LnvVp1f
7ef44z+v08l2BflzM7TGzeeM/l66d/woM+bLorm9b9R5L5/3+0Pv+YNbssc+
c71G9u9NTVfHlpx2Ydviy4fec8WINic7V8V5NZqGKddr9F8R2d6n6eyvxpaO
zO9RORSL53xijGts/PQaAJRFrwEAAAAAAPkmtdeISiyfO6LX+OQdcaTGu6uf
1TfFpy65I9ZtbYmWlq2x6r4vVb02uk1ozcwj0b+d/5V4fNOO2Lu3JVb94IZR
zUj9vUbE0ee+NWpca1v2RdveLbHk9i+OOvbIZ+kTO6/TDe6fMq1HU1x040Ox
dW97dHZ2xK5Nj8d1F9Q69vGqDqWp6dxYsGx9/5haYuuI/ZLXfp7tB85grzGy
j0n6lXtXPh9tbW2xa+vaWDjvvMxro4/dt//RqnHf+OCa2LRpU7Rn3jf1eo2o
nodlcJs9Z07MmTO76vfVawDwQXfJR86K//rbeg0AAAAAABhpcnuN0a3DFT/Z
M+b7dyz/u1HPpkdtl9yfu67I/lV17Ps+eo1k/oPnFv7FmMf79AUXjPksfSLn
dTo7llxexzlfFhtHzlXR9dLw3BtjbPc0j1wvJdt6zIqNub3Gn435eu1eo9+x
F+K6OsZ1/S8O5HwbR+L2nH3nbxz+jNONbczxZdYuGdlrnO47Od17uvetqJoD
pnqbET9Zt3JoTSG9BgAfVGmv8a/LHgYAAAAAAEw5k91rRM9LQ/MR1LvWx7Fd
P4/rZp6d+8x6wdIXozLGvvvW3ZOzBsu58eV7n4723Y8NzVVwT8vb4z6Vfavz
j33jog1Rqbwa1w3+7YuLXp708zqdw9seq3Hs/nO/a1UcqnnwN2P9D76Us19T
nH/V7bGlPe+ZfiXWfPM/D77v6tiec+zdS64d6kTy5prIrl9zz5a83+JIrFp4
Re64Ptc/rua9x2p+F72d2+P2OZ+p2efsW37N8NhqfC/Z9WIe2NU9/ELfKzV+
59N/JwPzzcz5j2O/p/dIrH9kfsyZPTtm929z5syLux5cE63Jd9hXqxUZP70G
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
AAAAAAAAAACK9f8BfuYF2g==
    "], {{0, 1116}, {2156, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{2156, 1116},
  PlotRange->{{0, 2156}, {0, 1116}}]], "TemplateEditableContent",
 CellFrameLabels->{{
    Cell["Image: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{20, 0}, {0, 0}},
 CellChangeTimes->{3.7400650033834143`*^9, 3.740065080483708*^9, 
  3.740065122546071*^9},ExpressionUUID->"32f16ef4-646e-45ed-a15a-\
a912cfc9ecd6"],

Cell["\<\
Import support for Twine Stories made using the Harlowe markup language. The \
importer can generate a Graph and Association form for any html file with the \
Twine  format. The Twine Link syntax is supported as long as it is not in a \
macro (commands for changing states of story elements). Using the Association \
form,  a Twine Summary can be generated to explore the passages via a \
Clickable Graph. Association Forms  can be exported to the Twine HTML format. \
A folder is generated in the notebook directory where the story will be \
stored. These can then be imported into Twine.
\
\>", "TemplateEditableContent",
 CellFrameLabels->{{
    Cell["Summary \nof Results: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{5, 0}, {0, 0}},
 CellChangeTimes->{{3.740065206401813*^9, 3.740065270087113*^9}, {
  3.740065319297982*^9, 3.740065329527135*^9}, {3.740065365501939*^9, 
  3.740065496525758*^9}, {3.740065530799367*^9, 3.7400655439805117`*^9}, {
  3.7400656284384727`*^9, 3.74006576756306*^9}, {3.740065802527179*^9, 
  3.74006584220862*^9}, {3.740065874478228*^9, 3.740065948964616*^9}, {
  3.740066682155341*^9, 3.740066691498955*^9}, {3.740066751167626*^9, 
  3.7400668703171167`*^9}, {3.7400669402529593`*^9, 
  3.740067066827633*^9}},ExpressionUUID->"ba2205bf-d701-4ef5-aa12-\
c7a7f1002441"],

Cell["\<\
The Harlowe markup language has support for macros: commands that can change \
story elements (appearance, flow, state etc.). Among other types, there are \
conditional, printing, data and output macros. Some macros include Links to \
other passages, which I can\[CloseCurlyQuote]t support yet as they are \
effectively hidden from my parser. The next step is to gradually implement \
these macros and continually increase the number of stories I am testing on. \
Any errors or unsupported features can be approached in this step-wise \
fashion.\
\>", "TemplateEditableContent",
 CellFrameLabels->{{
    Cell["Future \nwork: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{20, 0}, {0, 0}},
 CellChangeTimes->{{3.740066083148407*^9, 3.740066314549921*^9}, {
  3.740066355197777*^9, 3.740066507182369*^9}, {3.740067093544229*^9, 
  3.740067106413804*^9}, {3.740069413522421*^9, 
  3.740069530619306*^9}},ExpressionUUID->"e44105f6-e95a-4d28-9e4d-\
8a40b3d4e596"],

Cell[BoxData[""], "Input",
 CellOpen->False,ExpressionUUID->"4a721f19-623c-47ad-bb58-c6de867557f0"],

Cell[TextData[{
 StyleBox["Note",
  FontWeight->"Bold"],
 ": Everything above this bar is your poster.Make sure it fits on a single \
page. ",
 Cell[BoxData[
  ButtonBox["\<\"Preview Poster\"\>",
   Appearance->Automatic,
   ButtonFunction:>With[{$CellContext`authorInfo = NotebookImport[
        EvaluationNotebook[], "TemplateAuthorInfo"], $CellContext`content = 
      NotebookImport[
        EvaluationNotebook[], "TemplateEditableContent"]}, 
     CreateDocument[
      Notebook[{
        Cell[
         Part[$CellContext`content, 1], "Title", FontColor -> 
         RGBColor[
          0.25098039215686274`, 0.25098039215686274`, 0.25098039215686274`], 
         TextAlignment -> Center], 
        Cell[
         TextData[{
           Part[$CellContext`authorInfo, 1], " (", 
           StyleBox["Mentor", Bold], ": ", 
           Part[$CellContext`authorInfo, 2], ")"}], "Text", TextAlignment -> 
         Center], 
        Cell[
         Part[$CellContext`authorInfo, 3], "Text", TextAlignment -> Center], 
        Cell[
         Part[$CellContext`content, 3], TextAlignment -> Center], 
        Cell[
         TextData[
          StyleBox["Goal", FontWeight -> Bold]], "Text"], 
        Cell[
         Part[$CellContext`content, 1], "Text"], 
        Cell[
         TextData[
          StyleBox["Summary of Results", FontWeight -> Bold]], "Text"], 
        Cell[
         Part[$CellContext`content, 4], "Text"], 
        Cell[
         TextData[
          StyleBox["Future Work", FontWeight -> Bold]], "Text"], 
        Cell[
         Part[$CellContext`content, 5], "Text"]}, WindowSize -> {550, 650}, 
       ScreenStyleEnvironment -> "Printout", ShowPageBreaks -> True, 
       PrintingOptions -> {"PaperOrientation" -> "Portrait"}, 
       WindowFrameElements -> {"CloseBox"}]]],
   Evaluator->Automatic,
   Method->"Queued"]],ExpressionUUID->"deee04eb-f07d-48ae-9b32-a1e3512be1e2"]
}], "TemplateDivider",
 GeneratedCell->True,
 CellAutoOverwrite->
  True,ExpressionUUID->"f97819d1-7e79-4a5e-9921-90745ea05a94"]
}, Open  ]],

Cell[CellGroupData[{

Cell["End of School Presentation Content", "TemplateSectionHeaders",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellTags->
  "PresentationContent",ExpressionUUID->"8e028c0c-7cb5-4cea-9aaf-\
57044e03e425"],

Cell[TextData[{
 Cell["\<\
In addition to the poster content, include other content to present at the 2 \
minute presentation for end of school. Use the buttons below to add more \
sections.\
\>", "Text",ExpressionUUID->"36bb9e60-8d73-47a8-8a18-581b097aa5c4"],
 Cell[BoxData[
  TemplateBox[{ButtonBox["\"Add Header\"", ButtonFunction :> NotebookWrite[
       InputNotebook[], 
       Cell["Section Header", "TemplateEditableHeader"]], Appearance -> 
     Automatic, Evaluator -> Automatic, Method -> "Preemptive"],ButtonBox[
    "\"Add Text\"", ButtonFunction :> NotebookWrite[
       InputNotebook[], {
        Cell[
        "Type text here", "TemplateEditableContent", 
         CellMargins -> {{65, 20}, {10, 10}}, ShowCellBracket -> True]}], 
     Appearance -> Automatic, Evaluator -> Automatic, Method -> "Preemptive"],
    ButtonBox["\"Add Code or Image\"", ButtonFunction :> NotebookWrite[
       InputNotebook[], 
       Cell[
        ExpressionCell[123], "TemplateEditableInput", 
        CellMargins -> {{65, 20}, {10, 10}}, ShowCellBracket -> True]], 
     Appearance -> Automatic, Evaluator -> Automatic, Method -> "Preemptive"]},
   "RowDefault"]],ExpressionUUID->"6fd17dbc-b056-4736-99ad-b691cb8932d7"]
}], "TemplateInstructions",
 GeneratedCell->True,
 CellAutoOverwrite->
  True,ExpressionUUID->"a415c0fc-f692-474a-a3a1-95fb4df9ef20"],

Cell[CellGroupData[{

Cell["Association Form", "TemplateEditableHeader",
 CellChangeTimes->{{3.7400770903999434`*^9, 
  3.740077092079114*^9}},ExpressionUUID->"a82eb68b-c55f-495d-ac5a-\
d97167784e73"],

Cell["Here is an Association form of a Twine Story", "TemplateEditableContent",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{{3.740077094989471*^9, 
  3.7400771070406647`*^9}},ExpressionUUID->"c93624b0-8e9f-452c-9c74-\
674d9e990fed"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Section Header", "TemplateEditableHeader",ExpressionUUID->"d81a2f92-5f84-4614-aee9-dcb6b7eeac79"],

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "2"}], "}"}]}], "]"}], "\[IndentingNewLine]", 

 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$7742#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1, 0.8414709958344739},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{297.71484375, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1, 2}, {0.8414709958344739, 0.9999999905967447}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]}], "TemplateEditableInput",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 
  10}},ExpressionUUID->"20197eb1-0a2c-4e3a-a068-01939f0a01f0"],

Cell[BoxData[""], "Input",
 CellOpen->False,ExpressionUUID->"5ddaca3b-16c4-4ddd-a510-a603177f7695"],

Cell[TextData[{
 StyleBox["Note",
  FontWeight->"Bold"],
 ": Everything above this bar is in your 2 minute presentation. Make sure it \
fits on 2 slides. ",
 Cell[BoxData[
  ButtonBox["\<\"Preview Presentation\"\>",
   Appearance->Automatic,
   ButtonFunction:>With[{$CellContext`authorInfo = NotebookImport[
        EvaluationNotebook[], "TemplateAuthorInfo"], $CellContext`content = 
      NotebookImport[
        EvaluationNotebook[], 
        Alternatives[
        "TemplateEditableHeader", "TemplateEditableInput", 
         "TemplateEditableContent"]]}, 
     CreateDocument[
      Notebook[{
        Cell[
        "Wolfram Summer School 2018", FontFamily -> "Source Sans Pro", 
         FontSize -> 42, FontVariations -> {"CapsType" -> "AllCaps"}, 
         RGBColor[
         0.25098039215686274`, 0.25098039215686274`, 0.25098039215686274`], 
         Background -> RGBColor[1., 0.807843137254902, 0.2549019607843137], 
         PageWidth -> WindowWidth, ShowCellBracket -> False, 
         CellMargins -> {{0, 0}, {0, 0}}, 
         CellBracketOptions -> {"OverlapContent" -> True}], 
        Cell[
        "Title", "Title", FontColor -> 
         RGBColor[
          0.25098039215686274`, 0.25098039215686274`, 0.25098039215686274`], 
         CellMargins -> {{Inherited, 10}, {10, 10}}], 
        Cell[
         TextData[{
           StyleBox["AUTHOR: ", "Bold", 
            RGBColor[1., 0.5058823529411764, 0.]], 
           Part[$CellContext`authorInfo, 1], " (Mentor: ", 
           Part[$CellContext`authorInfo, 2], ")"}], "Text"], 
        Cell[
         TextData[{
           StyleBox["AFFILIATION: ", "Bold", 
            RGBColor[1., 0.5058823529411764, 0.]], 
           Part[$CellContext`authorInfo, 3]}], "Text"], 
        Cell[
         Part[$CellContext`content, 3], TextAlignment -> Center], 
        Cell[
         TextData[{
           StyleBox["GOAL OF THE PROJECT: ", "Bold", 
            RGBColor[1., 0.5058823529411764, 0.]], 
           Part[$CellContext`content, 2]}], "Text"], 
        Cell["", "SlideShowNavigationBar", CellTags -> "SlideShowHeader"], 
        Cell[
         TextData[{
           StyleBox["SUMMARY OF RESULTS: ", "Bold", 
            RGBColor[1., 0.5058823529411764, 0.]], 
           Part[$CellContext`content, 4]}], "Text"], 
        Cell[
         TextData[{
           StyleBox["ADDITIONAL CONTENT: ", "Bold", 
            RGBColor[1., 0.5058823529411764, 0.]]}], "Text"], 
        Apply[Sequence, 
         Map[Cell[#, "Text"]& , 
          Part[$CellContext`content, 
           Span[6, All]]]], 
        Cell[
         TextData[{
           StyleBox["FUTURE WORK: ", "Bold", 
            RGBColor[1., 0.5058823529411764, 0.]], 
           Part[$CellContext`content, 5]}], "Text"]}, ScreenStyleEnvironment -> 
       "SlideShow", WindowSize -> {1024, 740}]]],
   Evaluator->Automatic,
   Method->"Queued"]],ExpressionUUID->"c20b8022-a781-4e4e-a5c0-6a405440c0ea"]
}], "TemplateDivider",
 GeneratedCell->True,
 CellAutoOverwrite->
  True,ExpressionUUID->"076ddf5c-307b-4320-9bc6-9a3254f2388c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Detailed Project Notes", "TemplateSectionHeaders",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellTags->
  "ProjectNotes",ExpressionUUID->"d0702cda-4649-4987-a5e2-607be4aa4f6e"],

Cell[CellGroupData[{

Cell["Main Results in Detail", "Subsubsection",ExpressionUUID->"c1b785be-a60a-40fe-b1f1-2d83590b38cd"],

Cell[TextData[{
 "Import support for Twine Stories made using the Harlowe markup language. \
Harwlowe is the default markup language that the Twine Editor uses (others: \
sugarcane, sugarcube). The first thing to do in representing a graph or \
network is defining what the ",
 StyleBox["nodes",
  FontSlant->"Italic"],
 " and ",
 StyleBox["edges",
  FontSlant->"Italic"],
 " are. In the Twine case ",
 StyleBox["passages",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" ",
  FontWeight->"Bold"],
 "are nodes and  ",
 StyleBox["connections between passages",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" ",
  FontSlant->"Italic"],
 "are edges. All of these edges are directed, going from the ",
 StyleBox["passage the link is contained in",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " to the",
 StyleBox[" ",
  FontSlant->"Italic"],
 StyleBox["passage specified in the link",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ". To specify a link, the ",
 StyleBox["passage to link to",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" ",
  FontSlant->"Italic"],
 "is placed within a pair of Double Square Brackets: [[LinkName]]. There are \
also hidden links with three ways to specify them: [[Go Here-> Door Number \
3]] , [[Door Number 3<-Go Here]], [[Go Here|Door Number 3]]. The user will \
see the text \[OpenCurlyDoubleQuote]Go Here\[CloseCurlyDoubleQuote] but will \
end up at the passage named \[OpenCurlyDoubleQuote]Door Number 3\
\[CloseCurlyDoubleQuote]. This syntax is supported as long as it is not in a \
macro (commands for changing states of story elements). \n\nThere was Initial \
trouble importing the Twine files, though If I Imported with the XMLObject \
format spec it would work. The problem then became that the XML I got back \
was formatted incorrectly. A Body tag was separating passage contents from \
their parent node. Riccardo wrote an XML parser that fixed the issue. \n\n| \
",
 StyleBox["IMPORTER |\n",
  FontWeight->"Bold"],
 "\nThe import procedure has to do a few things: Extract elements from an \
html document and generate a graph and association. First, the html file is \
imported as a string. Some Published Twine Files have non story/passage \
information. It is ignored by using ",
 StyleBox["StringCases ", "Input"],
 "to find the content that starts with open tag ",
 StyleBox["<tw-storydata> ", "Input"],
 "and ends with the closing tag ",
 StyleBox["</tw-storydata>", "Input"],
 ". This result is then parsed by Riccardo\[CloseCurlyQuote]s parser. From \
the generated XML content the root node and its name, as well as the \
passages, are extracted using ",
 StyleBox["Cases", "Input"],
 ". Then an Association is created between passage names and their respective \
content to be used in tooltips in the generated graph via ",
 StyleBox["AssociationThread ", "Input"],
 "while also removing the link syntax. ",
 StyleBox["AssociationTo ", "Input"],
 "is then used to add the rootNode to that association. Then a list of edges \
is created between a passage and any links contained in its content. The \
DIrected Edge from the root node to the first passage is then prepended to \
that list. A graph is generated with these edges. Tooltips were then \
iteratively wrapped around the vertices using ",
 StyleBox["Table", "Input"],
 ". A final graph was constructed using the Tooltip vertices and the list of \
all the edges.  Then the output Association Form is generated. First, using \
",
 StyleBox["AssociationThread", "Input"],
 " just as before, the passage names and passage contents enter a key-value \
grouping, except link syntax is retained. Then the root \
node\[CloseCurlyQuote]s name is given as the key to the Association of \
passages. Finally, a list containing the graph and the association is \
returned.\n\n",
 StyleBox["| EXPORTER |",
  FontWeight->"Bold"],
 "\n\nThe exporter takes in an Association form of a story. The form is:\n\t\n\
\t \t\t",
 StyleBox["<| \[OpenCurlyDoubleQuote]StoryTitle\[CloseCurlyDoubleQuote] \
\[Rule] <| \[OpenCurlyDoubleQuote]PassageName\[CloseCurlyDoubleQuote] \[Rule] \
\[CloseCurlyDoubleQuote]PassageContent\[CloseCurlyDoubleQuote] ...|>\n\n", 
  "Input"],
 "One of the metadata options for a Twine Story passage is the position of \
the passage, because in the Twine Editor one can drag passages around in a \
workspace. A simple way to get the vertices is just use the vertex \
coordinates form a graph representation of the story, this can be don with ",
 StyleBox["GraphEmbedding", "Input"],
 ". The ",
 StyleBox["twineSummary", "Input"],
 " function will be discussed next, but it can be used to return just the \
clickable graph. To get the vertex coordinates we can do the following:\n\n\t\
\t\t",
 StyleBox["GraphEmbedding[twineSummary[<| \[OpenCurlyDoubleQuote]story\
\[CloseCurlyDoubleQuote] \[Rule] ...|>, \[OpenCurlyDoubleQuote]Graph\
\[CloseCurlyDoubleQuote]]]", "Input"],
 "\n\nThis is great, except that these points are not scaled correctly for \
the Twine Workspace. The right way to scale these points are still being \
experimented with. The current method is to Rescale the points (range: -1, 1) \
to values between 0 and 250. \n\nThe next thing to do is embed data into a \
string that can be exported to HTML. StringTemplate was used for this. The \
first StringTemplate contains some metadata for the Story and a template slot \
is used for the story title:\n\n",
 StyleBox["\t\t\tStringTemplate[\[OpenCurlyDoubleQuote]<tw-storydata name=\\\
\[OpenCurlyDoubleQuote]`storyTitle`\\\[CloseCurlyDoubleQuote] \n\t\t\t\t...\
\[CloseCurlyDoubleQuote]][<| \[OpenCurlyDoubleQuote]storyTitle\
\[CloseCurlyDoubleQuote] \[Rule] First[Keys[<| \[OpenCurlyDoubleQuote]story\
\[CloseCurlyDoubleQuote] \[Rule] ...|>]]|>]\n\t\t\t\n", "Input"],
 "To embed the passages more StringTemplates are generated. One for each \
passage in the passage association. This is done using Table.\n\n",
 StyleBox["passageAssoc = First[Values[<| \[OpenCurlyDoubleQuote]story\
\[CloseCurlyDoubleQuote] \[Rule] ...|>]];\nassocLength = \
Length[assocLength];", "Input"],
 "\n",
 StyleBox["Table[StringTemplate[\[OpenCurlyDoubleQuote]<tw-passagedata pid=\\\
\[OpenCurlyDoubleQuote]`pid`\\\[CloseCurlyDoubleQuote] name=\\\
\[OpenCurlyDoubleQuote]`passagename`\\\[CloseCurlyDoubleQuote]\n\t\t... \
\[CloseCurlyDoubleQuote]][<| \[OpenCurlyDoubleQuote]pid\
\[CloseCurlyDoubleQuote] \[Rule] index, \[OpenCurlyDoubleQuote]passagename\
\[CloseCurlyDoubleQuote] \[Rule] Keys[passageAssoc]\[LeftDoubleBracket]index\
\[RightDoubleBracket] ... |>]\n\t\t\t\t, {1, assocLength, 1};\n\t\t\t\t]", 
  "Input"],
 "\nThen the header, passage template and the closing tag for the story are \
joined and exported as an HTML Fragment (it doesn\[CloseCurlyQuote]t contain \
a Doctype).\n\n",
 StyleBox["| SUMMARIZER |",
  FontWeight->"Bold"],
 "\n\nThe summarizer has three functions; ",
 StyleBox["Summary",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " which returns a ",
 StyleBox["GraphicsRow", "Input"],
 " containing the Clickable Graph and Dynamic passage viewer,  ",
 StyleBox["Graph",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " which returns",
 StyleBox[" ",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 "the clickable graph by itself, and ",
 StyleBox["Export ",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 "which exports the story in HTML format to a folder called ",
 StyleBox["TwineStories",
  FontWeight->"Bold"],
 ".\n\nThe Dynamic Viewer\[CloseCurlyQuote]s content changes when  buttons on \
the graph are clicked. The content is stored in the symbol ",
 StyleBox["activePassage", "Input"],
 ", it is initialized with the story name.  ::: Then the edges for the graph \
are created. The ",
 StyleBox["generateEdges", "Input"],
 " function creates a directed edges between the passage name and all the \
links contained in it::: The passage is then cleaned: markdown syntax removal \
and link syntax removal. A list of buttons are created for each passage of \
the story where the button\[CloseCurlyQuote]s text is the passage name and \
the action is to set ",
 StyleBox["activePassage ", "Input"],
 "to the passages\[CloseCurlyQuote] content. Using the generated edges a \
Graph is created and the vertices are replaced with buttons. A Switch \
expression is used to allow the user to spcify as an argument whether thy\
\[CloseCurlyQuote]d like to export, to output the sumary, or to output just \
the graph."
}], "Text",
 CellChangeTimes->{
  3.740076944268944*^9, {3.740077765075534*^9, 3.7400778789679213`*^9}, {
   3.740077962509853*^9, 3.7400780014205112`*^9}, {3.740078044720158*^9, 
   3.7400781891073723`*^9}, {3.740078263616605*^9, 3.740078333844735*^9}, {
   3.7400783745061607`*^9, 3.740078532818589*^9}, {3.740078648625988*^9, 
   3.7400787231530113`*^9}, {3.740078878197897*^9, 3.740078902659957*^9}, {
   3.740079114394491*^9, 3.740079199106023*^9}, {3.740079297904009*^9, 
   3.740079360054881*^9}, {3.740079405526002*^9, 3.74007954362064*^9}, {
   3.740079630562881*^9, 3.740079656862329*^9}, {3.740079743261085*^9, 
   3.740079748584165*^9}, {3.740079796008739*^9, 3.740080094028891*^9}, {
   3.740080152840805*^9, 3.740080286091981*^9}, {3.7400809123548613`*^9, 
   3.740080987312956*^9}, {3.740081232766218*^9, 3.740081256455961*^9}, {
   3.740081399357739*^9, 3.740081427072419*^9}, {3.74008146222682*^9, 
   3.740081500554097*^9}, {3.740081551561215*^9, 3.740081560271096*^9}, {
   3.740082041026113*^9, 3.740082117699265*^9}, {3.7400821692904253`*^9, 
   3.740082177090612*^9}, {3.7400822116500883`*^9, 3.7400826118378773`*^9}, {
   3.74008265445084*^9, 3.7400826851557713`*^9}, {3.740082804492888*^9, 
   3.7400828099739437`*^9}, 3.7400834201575613`*^9, {3.740083551548932*^9, 
   3.740083636192182*^9}, {3.740083924095468*^9, 3.740084042307033*^9}, {
   3.74008430802785*^9, 3.7400843786532087`*^9}, {3.740084560725267*^9, 
   3.740084740834838*^9}, {3.7400848303543043`*^9, 3.740084854097115*^9}, {
   3.740084884908946*^9, 3.740084931506577*^9}, {3.740084967275792*^9, 
   3.7400852170067997`*^9}, {3.740085282919572*^9, 3.740085288185276*^9}, {
   3.740085426150906*^9, 3.7400855290850687`*^9}, {3.740085803644947*^9, 
   3.740085974362075*^9}, {3.740086052520286*^9, 3.740086196832017*^9}, {
   3.740086228738474*^9, 3.740086326941422*^9}, {3.740086386578671*^9, 
   3.740086777646015*^9}, {3.740086828425065*^9, 3.740086963124507*^9}, {
   3.7400870011096497`*^9, 3.740087002192346*^9}, {3.7400870534550037`*^9, 
   3.7400872319677477`*^9}, {3.740087271706623*^9, 3.740087288441752*^9}, {
   3.7400873392790537`*^9, 3.7400874449371033`*^9}, {3.7400874753612413`*^9, 
   3.740087529419128*^9}, {3.740087591676425*^9, 3.740087616725813*^9}, {
   3.7400881033900223`*^9, 3.740088405038471*^9}, {3.74008848863148*^9, 
   3.740088622928083*^9}, {3.7400886659350967`*^9, 3.7400886852558117`*^9}, {
   3.7400887480935297`*^9, 3.74008875525705*^9}, {3.7400887913477097`*^9, 
   3.740088799788828*^9}, {3.740088882012869*^9, 3.7400889472640944`*^9}, {
   3.7401520988188553`*^9, 3.740152164289753*^9}, {3.740152208566601*^9, 
   3.7401522612436934`*^9}, {3.7401526212946978`*^9, 3.740152712954096*^9}, {
   3.7401542469018517`*^9, 3.740154292634328*^9}, {3.740154324509861*^9, 
   3.740154359091654*^9}, {3.7401543908663387`*^9, 3.740154402064766*^9}, {
   3.7401544498433447`*^9, 3.740154601596345*^9}, {3.740154640247054*^9, 
   3.740154685163713*^9}, 3.740160883773718*^9, {3.7401609747253113`*^9, 
   3.740161021760706*^9}},ExpressionUUID->"26765428-5634-43cf-8b19-\
e3e638f6824b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code", "Subsubsection",ExpressionUUID->"6ebeefbd-4857-42fb-a308-27aaa279c47f"],

Cell[TextData[ButtonBox["GitHub Repo",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://github.com/dishmint/Summer2018Starter"], None},
 ButtonNote->"https://github.com/dishmint/Summer2018Starter"]], "Text",
 CellChangeTimes->{{3.74007680633072*^9, 3.740076808140477*^9}, {
  3.740076875536619*^9, 
  3.7400768755424833`*^9}},ExpressionUUID->"14e3781a-a52e-4548-bf74-\
c0aba980dad1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Notes", "Subsubsection",
 CellChangeTimes->{{3.740076890733676*^9, 
  3.740076891166754*^9}},ExpressionUUID->"ba68b18e-0118-4694-9cc8-\
e616df451654"],

Cell[TextData[{
 "The initial goal of the project is to develop an import export system \
between the Wolfram Language and Twine. What were the implementation tasks \
for this project?\n\nFirst : Figure out the structure of the Twine Story:\n\t\
I found that there was a particular and simple structure representing the \
story.\n\t\t- <tw-storydata> <tw-passagedata></tw-passaagedata> \[Ellipsis] \
</tw-storydata>\n\t\tThe builtin parser was having troube parsing the Twine \
HTML file correctly, Riccardo wrote a parser that nested the elements \
correctly. From there I was able to pick apart the neccessary elements and \
generate a graph and association from the story.\n\nAnother thingI did was \
implement an exporter and summarizer. The summarizer takes in the association \
form and can show a button graph with a dynamic passage viewer that changes \
by button clicks, or just the graph, or just Export the file. The summarizer \
exports to the TwineStories folder in the Notebook Directory\n\nThe \
twinExport function allows one to specify directly / explicitly where to save \
the files via a path string.\n\nThese are the basic results. I will look \
through my project files and notes that I wrote and add them to the Project \
notebook. I started attempting implementation of macros.",
 StyleBox["\n\n",
  FontWeight->"Bold"],
 "Do I Need the Intermediate File\[LongDash]Twine saves intermediate files to \
the browser\[CloseCurlyQuote]s local storage, can\[CloseCurlyQuote]t access \
this\nExploration\[LongDash]Twine stories are about exploration. Do we want \
the Graph representation in WL to be explorable?\nIf yes, it won\
\[CloseCurlyQuote]t be like the exploration in Twine itself. It will be a \
computable exploration. Look at Graph functions for some insight.\n\n\[Dash]\t\
Just focus on Harlowe markup support (which is the default markup language \
for Twine)\n\nInitially, the Exported HTML did not work in Twine because I \
neglected the metadata of tw-storydata and tw-passagedata tags. After I \
hardcoded the metadata Exports worked. The question with this is how to keep \
the metadata up to date.\n\nNot including metadata caused The Twine app to \
hang, so I had to re-download it"
}], "Text",
 CellChangeTimes->{{3.7400704305210543`*^9, 3.740070499639557*^9}, {
   3.7400706172395773`*^9, 3.7400706262912292`*^9}, {3.740070678547127*^9, 
   3.7400706871295977`*^9}, {3.7400710534918423`*^9, 3.740071079944068*^9}, {
   3.740071140392815*^9, 3.74007114909312*^9}, {3.740071206624344*^9, 
   3.7400712186951838`*^9}, {3.7400713595426483`*^9, 
   3.7400714430965557`*^9}, {3.740071532041513*^9, 3.740071576698867*^9}, {
   3.740075876420567*^9, 3.7400759012034187`*^9}, 3.740077605374743*^9, {
   3.740077638059165*^9, 3.740077639090227*^9}, {3.7400790746124277`*^9, 
   3.7400790883200617`*^9}, {3.7400890472474613`*^9, 
   3.7400890483771467`*^9}},ExpressionUUID->"becec713-ca55-4b8b-ab54-\
c4dd627f0f26"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conclusions in Detail", "Subsubsection",ExpressionUUID->"405e0fe7-2022-4d50-b275-5f85c6659f37"],

Cell["\<\
It is relatively easy to work with HTML. It may have been a bug that nested \
the tags improperly. Riccardo\[CloseCurlyQuote]s code fixed that problem so I \
could import the html correctly.  
I learned how to represent Twine\[CloseCurlyQuote]s particular HTML structure \
in Association and Graph forms. I learned how to extract and replace String \
Patterns. I learned how to Generate Graphs and replace their vertices with \
buttons.


There was a lot of Extraction from Data Structures, Replacing and Isolating \
String Patterns

How well did I succeed in the original goal?\
\>", "Text",
 CellChangeTimes->{{3.740071876305594*^9, 3.740071906095778*^9}, {
  3.740071988147483*^9, 3.7400722153317738`*^9}, {3.7400723688824873`*^9, 
  3.740072421425173*^9}, {3.740072472171649*^9, 3.740072483108206*^9}, {
  3.7400769505413094`*^9, 
  3.740076959830164*^9}},ExpressionUUID->"b6cd6139-3364-44b5-b808-\
517abaf230ad"]
}, Open  ]],

Cell["All Visualizations", "Subsubsection",ExpressionUUID->"aa59b7ca-7848-48f1-96cf-6286c1fabb09"],

Cell[CellGroupData[{

Cell["Data Sources Links/References", "Subsubsection",ExpressionUUID->"8d03133e-d036-4673-985c-415dd5ec88bb"],

Cell[TextData[{
 "Zip File (Contains the html) | ",
 ButtonBox["Depths of Sarcasm",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://ifdb.tads.org/viewgame?id=tuwbnnnvs9m4iifa"], None},
  ButtonNote->"http://ifdb.tads.org/viewgame?id=tuwbnnnvs9m4iifa"]
}], "Item",
 CellChangeTimes->{{3.7400718004757977`*^9, 
  3.7400718663093433`*^9}},ExpressionUUID->"39e46065-1e1e-40ad-905f-\
6c0784441efa"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Future Directions", "Subsubsection",ExpressionUUID->"9afe7952-52cb-49e5-812a-edf95df8c363"],

Cell["\<\
 If all goes well, Machine generated stories generated by the Wolfram \
Language can be exported as twine stories and uploaded to the internet, (or \
perhaps any graph). Whether the Graph in WL can be explored in a Twine-Like \
way via the notebook, is yet to be determined.
The Harlowe markup language has support for macros: commands that can change \
story elements (appearance, flow, state etc.). Among other types, there are \
conditional, printing, data and output macros. Some macros include Links to \
other passages, which I can\[CloseCurlyQuote]t support yet as they are \
effectively hidden from my parser. The next step is to gradually implement \
these macros and continually increase the number of stories I am testing on. \
For each parsing or macro error in a story, I can implement a fix.

Working with opensource software \[LongDash] this means I\[CloseCurlyQuote]m \
going to have to maintain this functionality as the Harlowe markup language \
changes

Passage Position on Export

Construct a Grammar (DCG?) that can parse a Twine Story into Appropriate \
Wolfram Language Expressions\
\>", "Text",
 CellChangeTimes->{
  3.740064407881299*^9, {3.7400674746510897`*^9, 3.740067475174996*^9}, {
   3.740070322272574*^9, 3.74007034833499*^9}, {3.740070388085034*^9, 
   3.740070411922353*^9}, {3.7400716353000526`*^9, 
   3.740071694929406*^9}},ExpressionUUID->"ab20175a-7ef0-4707-9029-\
6836dfeb4464"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Background Info Links/References", "Subsubsection",ExpressionUUID->"19b709dc-5a9b-4a0e-8d93-1058844be4dd"],

Cell[TextData[ButtonBox["Twine Reference",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://twinery.org/wiki/twine2:guide"], None},
 ButtonNote->"http://twinery.org/wiki/twine2:guide"]], "Text",
 CellChangeTimes->{{3.740078212842409*^9, 
  3.740078219331318*^9}},ExpressionUUID->"7461959e-186a-428b-b7de-\
182b7756c5ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Keywords", "Subsubsection",ExpressionUUID->"6668b03b-4180-4966-b673-b20f85cb5927"],

Cell["Provide keywords as items", "Text",ExpressionUUID->"a5e5e177-980c-46c4-8f4b-7804400a13ff"],

Cell[CellGroupData[{

Cell["< keyword 1 >", "Item",ExpressionUUID->"a0f68604-8bfc-4c6d-afb6-b6a38b6de7d0"],

Cell["< keyword 2 >", "Item",ExpressionUUID->"d4791c55-e7db-46a0-8162-0eebcfa1df4d"]
}, Open  ]]
}, Open  ]],

Cell["Other information", "Subsubsection",ExpressionUUID->"5f589531-3a9b-47cd-a487-fcf2f80aa83f"]
}, Open  ]]
},
NotebookEventActions:>{
 "WindowClose" :> 
  Module[{$CellContext`dy, $CellContext`hr, $CellContext`mn}, \
{$CellContext`dy, $CellContext`hr, $CellContext`mn} = Map[(LinkWrite[
         First[$FrontEnd], 
         FrontEnd`Value[#]]; LinkRead[
         First[$FrontEnd]])& , {"DateLong", "Hour", "Minute"}]; 
    NotebookLocate["LastModified"]; NotebookWrite[
      InputNotebook[], 
      Cell[
       TextData[{
        "Last modified on: ", $CellContext`dy, " at ", $CellContext`hr, 
         ":", $CellContext`mn}], "TemplateInstructions", CellTags -> 
       "LastModified", Deployed -> True, Background -> 
       Lighter[Gray, 0.5]]]]},
WindowSize->{812, 752},
WindowMargins->{{14, Automatic}, {Automatic, 21}},
WindowFrameElements->{"CloseBox"},
DockedCells->Cell[
 "Wolfram Summer School 2018", FontFamily -> "Source Sans Pro", FontSize -> 
  42, FontVariations -> {"CapsType" -> "AllCaps"}, 
  RGBColor[0.25098039215686274`, 0.25098039215686274`, 0.25098039215686274`], 
  Background -> RGBColor[1., 0.807843137254902, 0.2549019607843137]],
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 7, \
2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["TemplateProjectTitle", StyleDefinitions -> StyleData["Title"]],
     CellFrame -> True, CellMargins -> {{25, 20}, {5, 5}}, ShowCellLabel -> 
    True, CellFrameColor -> GrayLevel[0.85]], 
   Cell[
    StyleData["TemplateLabel", StyleDefinitions -> StyleData["Text"]], 
    FontSize -> 14, FontWeight -> Bold, FontColor -> 
    RGBColor[0.25098039215686274`, 0.25098039215686274`, 
      0.25098039215686274`], Background -> None], 
   Cell[
    StyleData["TemplateInstructions", StyleDefinitions -> StyleData["Text"]], 
    Editable -> False, ShowCellBracket -> False, FontSize -> 16], 
   Cell[
    StyleData["TemplateAuthorInfo", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> True, CellMargins -> {{25, 20}, {5, 5}}, ShowCellLabel -> 
    True, CellFrameColor -> GrayLevel[0.85]], 
   Cell[
    StyleData[
    "TemplateSectionHeaders", StyleDefinitions -> StyleData["Section"]], 
    Editable -> False, Selectable -> False, Deletable -> False, 
    ShowCellBracket -> False, Deployed -> True], 
   Cell[
    StyleData[
    "TemplateSectionSubHeaders", StyleDefinitions -> StyleData["Subsection"]],
     Editable -> False, ShowCellBracket -> False], 
   Cell[
    StyleData[
    "TemplateSectionSubSubHeaders", StyleDefinitions -> 
     StyleData["Subsubsection"]], Editable -> False, ShowCellBracket -> 
    False], 
   Cell[
    StyleData[
    "TemplateEditableHeader", StyleDefinitions -> StyleData["Subsubsection"]],
     FontColor -> RGBColor[1., 0.5058823529411764, 0.]], 
   Cell[
    StyleData[
    "TemplateEditableContent", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> True, ShowCellBracket -> False, 
    CellMargins -> {{25, 20}, {5, 5}}, Evaluatable -> False, ShowCellLabel -> 
    True, CellFrameColor -> GrayLevel[0.85]], 
   Cell[
    StyleData[
    "TemplateEditableInput", StyleDefinitions -> StyleData["Input"]], 
    Editable -> True, CellFrame -> True, CellMargins -> {{25, 20}, {5, 5}}, 
    Evaluatable -> True, ShowCellLabel -> True, CellFrameColor -> 
    GrayLevel[0.85]], 
   Cell[
    StyleData["TemplateDivider", StyleDefinitions -> StyleData["Text"]], 
    Editable -> False, Selectable -> False, Deletable -> False, PageWidth -> 
    WindowWidth, CellFrame -> {{False, False}, {8, False}}, ShowCellBracket -> 
    False, CellMargins -> {{0, -10}, {0, 0}}, 
    CellBracketOptions -> {"OverlapContent" -> True}, Deployed -> True, 
    CellFrameMargins -> {{10, 10}, {1, 1}}, CellFrameColor -> 
    RGBColor[1, 0.5, 0], Background -> 
    RGBColor[1., 0.807843137254902, 0.2549019607843137]]}, Visible -> False, 
  FrontEndVersion -> 
  "11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 7, 2018)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "LastModified"->{
  Cell[400, 13, 222, 4, 52, "TemplateInstructions",ExpressionUUID->"a049fff8-db5b-44dd-b6af-a2f809537870",
   CellTags->"LastModified"]},
 "AuthorInfo"->{
  Cell[647, 21, 176, 4, 67, "TemplateSectionHeaders",ExpressionUUID->"47541fce-e5a1-4793-b8e1-e1340b437ca6",
   CellTags->"AuthorInfo"]},
 "PosterContent"->{
  Cell[1606, 51, 190, 4, 67, "TemplateSectionHeaders",ExpressionUUID->"e3c11918-b62c-4e4f-bc19-a4aa32cba637",
   CellTags->"PosterContent"]},
 "PresentationContent"->{
  Cell[90137, 1550, 210, 5, 67, "TemplateSectionHeaders",ExpressionUUID->"8e028c0c-7cb5-4cea-9aaf-57044e03e425",
   CellTags->"PresentationContent"]},
 "ProjectNotes"->{
  Cell[102411, 1824, 189, 4, 67, "TemplateSectionHeaders",ExpressionUUID->"d0702cda-4649-4987-a5e2-607be4aa4f6e",
   CellTags->"ProjectNotes"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"LastModified", 126324, 2326},
 {"AuthorInfo", 126479, 2329},
 {"PosterContent", 126637, 2332},
 {"PresentationContent", 126805, 2335},
 {"ProjectNotes", 126975, 2338}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 222, 4, 52, "TemplateInstructions",ExpressionUUID->"a049fff8-db5b-44dd-b6af-a2f809537870",
 CellTags->"LastModified"],
Cell[CellGroupData[{
Cell[647, 21, 176, 4, 67, "TemplateSectionHeaders",ExpressionUUID->"47541fce-e5a1-4793-b8e1-e1340b437ca6",
 CellTags->"AuthorInfo"],
Cell[826, 27, 241, 5, 48, "TemplateAuthorInfo",ExpressionUUID->"2214bf82-cb91-41b2-a79f-ecd872282532"],
Cell[1070, 34, 243, 5, 48, "TemplateAuthorInfo",ExpressionUUID->"1d803eb4-64f6-4601-a1a0-49b5afc9692c"],
Cell[1316, 41, 253, 5, 48, "TemplateAuthorInfo",ExpressionUUID->"f3f2c56d-6554-49c0-a8f0-7c8d2bae5215"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1606, 51, 190, 4, 67, "TemplateSectionHeaders",ExpressionUUID->"e3c11918-b62c-4e4f-bc19-a4aa32cba637",
 CellTags->"PosterContent"],
Cell[1799, 57, 318, 6, 49, "TemplateEditableContent",ExpressionUUID->"16215b85-c481-4f11-8175-b0652d7bbfad"],
Cell[2120, 65, 1229, 20, 163, "TemplateEditableContent",ExpressionUUID->"c662dd0a-9849-40e8-bc89-a9f688107475"],
Cell[3352, 87, 287, 6, 60, "TemplateInstructions",ExpressionUUID->"ec924e65-f9fc-4678-8fe3-95cd292f053c"],
Cell[3642, 95, 81999, 1350, 337, "TemplateEditableContent",ExpressionUUID->"32f16ef4-646e-45ed-a15a-a912cfc9ecd6"],
Cell[85644, 1447, 1335, 22, 186, "TemplateEditableContent",ExpressionUUID->"ba2205bf-d701-4ef5-aa12-c7a7f1002441"],
Cell[86982, 1471, 990, 17, 140, "TemplateEditableContent",ExpressionUUID->"e44105f6-e95a-4d28-9e4d-8a40b3d4e596"],
Cell[87975, 1490, 99, 1, 19, "Input",ExpressionUUID->"4a721f19-623c-47ad-bb58-c6de867557f0",
 CellOpen->False],
Cell[88077, 1493, 2023, 52, 38, "TemplateDivider",ExpressionUUID->"f97819d1-7e79-4a5e-9921-90745ea05a94"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90137, 1550, 210, 5, 67, "TemplateSectionHeaders",ExpressionUUID->"8e028c0c-7cb5-4cea-9aaf-57044e03e425",
 CellTags->"PresentationContent"],
Cell[90350, 1557, 1351, 27, 90, "TemplateInstructions",ExpressionUUID->"a415c0fc-f692-474a-a3a1-95fb4df9ef20"],
Cell[CellGroupData[{
Cell[91726, 1588, 178, 3, 45, "TemplateEditableHeader",ExpressionUUID->"a82eb68b-c55f-495d-ac5a-d97167784e73"],
Cell[91907, 1593, 267, 5, 58, "TemplateEditableContent",ExpressionUUID->"c93624b0-8e9f-452c-9c74-674d9e990fed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92211, 1603, 103, 0, 45, "TemplateEditableHeader",ExpressionUUID->"d81a2f92-5f84-4614-aee9-dcb6b7eeac79"],
Cell[92317, 1605, 6888, 134, 256, "TemplateEditableInput",ExpressionUUID->"20197eb1-0a2c-4e3a-a068-01939f0a01f0"],
Cell[99208, 1741, 99, 1, 19, "Input",ExpressionUUID->"5ddaca3b-16c4-4ddd-a510-a603177f7695",
 CellOpen->False],
Cell[99310, 1744, 3052, 74, 38, "TemplateDivider",ExpressionUUID->"076ddf5c-307b-4320-9bc6-9a3254f2388c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[102411, 1824, 189, 4, 67, "TemplateSectionHeaders",ExpressionUUID->"d0702cda-4649-4987-a5e2-607be4aa4f6e",
 CellTags->"ProjectNotes"],
Cell[CellGroupData[{
Cell[102625, 1832, 102, 0, 45, "Subsubsection",ExpressionUUID->"c1b785be-a60a-40fe-b1f1-2d83590b38cd"],
Cell[102730, 1834, 11536, 218, 1868, "Text",ExpressionUUID->"26765428-5634-43cf-8b19-e3e638f6824b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114303, 2057, 84, 0, 45, "Subsubsection",ExpressionUUID->"6ebeefbd-4857-42fb-a308-27aaa279c47f"],
Cell[114390, 2059, 390, 8, 35, "Text",ExpressionUUID->"14e3781a-a52e-4548-bf74-c0aba980dad1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114817, 2072, 156, 3, 45, "Subsubsection",ExpressionUUID->"ba68b18e-0118-4694-9cc8-e616df451654"],
Cell[114976, 2077, 2943, 43, 748, "Text",ExpressionUUID->"becec713-ca55-4b8b-ab54-c4dd627f0f26"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117956, 2125, 101, 0, 45, "Subsubsection",ExpressionUUID->"405e0fe7-2022-4d50-b275-5f85c6659f37"],
Cell[118060, 2127, 927, 20, 219, "Text",ExpressionUUID->"b6cd6139-3364-44b5-b808-517abaf230ad"]
}, Open  ]],
Cell[119002, 2150, 98, 0, 45, "Subsubsection",ExpressionUUID->"aa59b7ca-7848-48f1-96cf-6286c1fabb09"],
Cell[CellGroupData[{
Cell[119125, 2154, 109, 0, 37, "Subsubsection",ExpressionUUID->"8d03133e-d036-4673-985c-415dd5ec88bb"],
Cell[119237, 2156, 403, 10, 32, "Item",ExpressionUUID->"39e46065-1e1e-40ad-905f-6c0784441efa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119677, 2171, 97, 0, 45, "Subsubsection",ExpressionUUID->"9afe7952-52cb-49e5-812a-edf95df8c363"],
Cell[119777, 2173, 1429, 27, 357, "Text",ExpressionUUID->"ab20175a-7ef0-4707-9029-6836dfeb4464"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121243, 2205, 112, 0, 45, "Subsubsection",ExpressionUUID->"19b709dc-5a9b-4a0e-8d93-1058844be4dd"],
Cell[121358, 2207, 326, 7, 35, "Text",ExpressionUUID->"7461959e-186a-428b-b7de-182b7756c5ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121721, 2219, 88, 0, 45, "Subsubsection",ExpressionUUID->"6668b03b-4180-4966-b673-b20f85cb5927"],
Cell[121812, 2221, 96, 0, 35, "Text",ExpressionUUID->"a5e5e177-980c-46c4-8f4b-7804400a13ff"],
Cell[CellGroupData[{
Cell[121933, 2225, 84, 0, 32, "Item",ExpressionUUID->"a0f68604-8bfc-4c6d-afb6-b6a38b6de7d0"],
Cell[122020, 2227, 84, 0, 32, "Item",ExpressionUUID->"d4791c55-e7db-46a0-8162-0eebcfa1df4d"]
}, Open  ]]
}, Open  ]],
Cell[122131, 2231, 97, 0, 45, "Subsubsection",ExpressionUUID->"5f589531-3a9b-47cd-a487-fcf2f80aa83f"]
}, Open  ]]
}
]
*)

